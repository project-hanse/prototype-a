@startuml
'https://plantuml.com/deployment-diagram

' Style '
' skinparam linetype polyline
' skinparam linetype ortho
top to bottom direction

title "Architecture Overview"

'Definitions'

rectangle "User Interface" {
    component "Development Frontend" << Angular Frontend >> as development_frontend
}

rectangle "Edge Gateway" {
    component "Reverse Proxy" << NGINX >> as reverse_proxy
    component "Edge Message Broker" << MQTT Broker >> as message_broker_edge
}

rectangle "Core Services" {
		rectangle "Operation Scheduler" as operation_scheduler #line.dashed {
			component "Pipeline Service" << .NET REST API >> as pipeline_service
    }

    rectangle "Suggestion Engine" as suggestions_engine #line.dashed {
        component "Learning Service" << Python REST API >> as learning_service
        component "MLflow Server" << MLflow >> as mlflow_server
    }

    rectangle "Operation Runtime" as operation_runtime #line.dashed {
    	collections  "Operation Worker" <<Python Worker>> as worker
    }

		collections "Pipeline Simulation Agent" << Python Worker >> as pipeline_creation_agent
    component "File Service" << .NET REST API >> as file_service
		component "Dataset Store" << Python REST API >> as dataset_store
}

rectangle "Shared Resources" {
    database "Graph Database" << Neo4j >> as graph_db
    node "S3 BLOB Store" << MinIO >> as blob_store_minio
    'database #line.dashed "Dataset Database" << MongoDB >> as dataset_db
    database "SQL Database" << MySQL >> as mysql_db
    component "Internal Event Bus" << RabbitMQ >> as message_broker_internal
}


'Interaction'

development_frontend -[#green,thickness=2]-> reverse_proxy : HTTP
development_frontend <-[dashed,thickness=2]-> reverse_proxy : MQTT

reverse_proxy -[#green,thickness=2]-> pipeline_service : HTTP
reverse_proxy -[#green,thickness=2]-> learning_service : HTTP
reverse_proxy -[#green,thickness=2]-> file_service : HTTP
reverse_proxy <-[dashed,thickness=2]r-> message_broker_edge : MQTT
'TODO: This connection should no longer exist'
reverse_proxy -[#green,thickness=2]-> dataset_store : HTTP
' reverse_proxy --> mlflow_server
'reverse_proxy --> adminer
' reverse_proxy --> message_broker_internal

pipeline_service -[#pink,thickness=2]-> graph_db : BOLT
pipeline_service <-[dashed,thickness=2]-> message_broker_internal : AMQP
message_broker_edge <-[dashed,thickness=2]--> pipeline_service : MQTT
pipeline_service -[#blue,thickness=2]-> mysql_db : SQL
pipeline_service -[#green,thickness=2]-> dataset_store : HTTP

learning_service -[#green,thickness=2]-> mlflow_server : HTTP
learning_service -[#green,thickness=2]-> dataset_store : HTTP
learning_service -[#green,thickness=2]-> pipeline_service : HTTP

pipeline_creation_agent -[#green,thickness=2]-> pipeline_service : HTTP
pipeline_creation_agent -[#green,thickness=2]l-> learning_service : HTTP

'adminer --> mysql_db

dataset_store -[#orange,thickness=2]-> blob_store_minio : S3
dataset_store <-[dashed,thickness=2]--> message_broker_internal : AMQP
'TODO: Default files should be seeded from file service PH-213'
' dataset_store --> blob_store

file_service -[#orange,thickness=2]-> blob_store_minio : S3

mlflow_server -[#blue,thickness=2]-> mysql_db : SQL
mlflow_server -[#orange,thickness=2]-> blob_store_minio : S3

worker -[#green,thickness=2]-> dataset_store : HTTP
worker -[#orange,thickness=2]-> blob_store_minio : S3
worker <-[dashed,thickness=2]-> message_broker_internal : AMQP

@enduml
