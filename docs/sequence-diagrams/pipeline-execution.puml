@startuml pipeline-execution

'Name Definitions'
!$ps = "Pipeline Service"
!$mb = "Event Bus"
!$bw = "Operation Worker"
!$ds = "Dataset Storage"

title ** Pipeline Execution **

actor User
participant "$ps" << (C,#ADD1B2) Pipeline Service >>
participant "$ps" << (C,#ADD1B2) Pipeline Service >>
participant "$mb" << MQTT Broker >>
collections "$bw" << Python Worker >>
participant "$ds" << Dataset Store >>

== Initialization ==

"$bw" -> "$mb" : subscribe("execute/+")

== Invocation ==

"User" -> "$ps" : GET /api/v1/Pipeline/execute/{pipelineId}

"$ps" -> "$ps": loadPipeline(pipelineId: Guid)
"$ps" <-- "$ps": pipeline: Pipeline
"$ps" -> "$ps": createExecution(pipeline: Pipeline)
"$ps" <-- "$ps": executionId
"User" <-- "$ps" : executionId: Guid
...

== Execution ==
alt all previous blocks have been executed
    "$ps" -> "$ps" : selectNextBlocks(pipelineId: Guid, executionId: Guid)
    "$ps" -> "$mb" : publish(request: BlockExecutionRequest)
    "$ps" <-- "$mb"
    "$ps" -> "$mb" : subscribe("executed/{pipelineId}/{executionId}")
    ...

    "$mb" --> "$bw" : newPublished(request: BlockExecutionRequest)
    "$bw" -> "$bw" : creationHash(inputDataSetIds: Guid[], operation: string, operationConfig: OperationConfig)
    "$bw" -> "$ds" : GET api/v1/datasets?creationHash={hash}
    "$bw" <-- "$ds"

    alt result already exists
        "$bw" -> "$mb" : publish(response: BlockExecutionResponse)
        "$bw" <-- "$mb"
    else
        "$bw" -> "$ds" : GET api/v1/datasets?id={datasetId};{datasetId};...
        "$bw" <-- "$ds"

        "$bw" -> "$bw" : executeOperation(datasets: Dataset[])

        alt successful
            "$bw" -> "$ds" : POST api/v1/datasets/create/{datasetId} (dataset: Dataset, creationHash: Hash)
            "$bw" <-- "$ds"
            "$bw" -> "$mb" : publish(response: BlockExecutionResponse)
            "$bw" <-- "$mb"
        else error during execution
            "$bw" -> "$mb" : publish(response: BlockExecutionResponse)
            "$bw" <-- "$mb"
        end
    end
    ...
    "$mb" --> "$ps" : newPublished(response: BlockExecutionResponse)
    "$ps" -> "$ps": storeExecutedBlocks()
    ...
end
@enduml
