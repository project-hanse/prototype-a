[
  {
    "sectionTitle": "Conversion",
    "title": "pandas.DataFrame.convert_dtypes",
    "description": "Convert columns to best possible dtypes using dtypes supporting pd.NA.",
    "signature": "DataFrame.convert_dtypes(infer_objects=True, convert_string=True, convert_integer=True, convert_boolean=True, convert_floating=True)",
    "signatureName": "convert_dtypes",
    "returns": "Series or DataFrame",
    "returnsDescription": "Copy of input object with new dtype.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L6033-L6190",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Conversion",
    "title": "pandas.DataFrame.copy",
    "description": "Make a copy of this object\u00e2\u0080\u0099s indices and data.",
    "signature": "DataFrame.copy(deep=True)",
    "signatureName": "copy",
    "returns": "copySeries or DataFrame",
    "returnsDescription": "Object type matches caller.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L5827-L5935",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Indexing, iteration",
    "title": "pandas.DataFrame.xs",
    "description": "Return cross-section from the Series\/DataFrame.",
    "signature": "DataFrame.xs(key, axis=0, level=None, drop_level=True)",
    "signatureName": "xs",
    "returns": "Series or DataFrame",
    "returnsDescription": "Cross-section from the original Series or DataFrame\ncorresponding to the selected index levels.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L3634-L3815",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Indexing, iteration",
    "title": "pandas.DataFrame.isin",
    "description": "Whether each element in the DataFrame is contained in values.",
    "signature": "DataFrame.isin(values)",
    "signatureName": "isin",
    "returns": "DataFrame",
    "returnsDescription": "DataFrame of booleans showing whether each element in the DataFrame\nis contained in values.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L10438-L10530",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Indexing, iteration",
    "title": "pandas.DataFrame.query",
    "description": "Query the columns of a DataFrame with a boolean expression.",
    "signature": "DataFrame.query(expr, inplace=False, **kwargs)",
    "signatureName": "query",
    "returns": "DataFrame or None",
    "returnsDescription": "DataFrame resulting from the provided query expression or\nNone if inplace=True.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L3910-L4073",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Function application, GroupBy & window",
    "title": "pandas.DataFrame.apply",
    "description": "Apply a function along an axis of the DataFrame.",
    "signature": "DataFrame.apply(func, axis=0, raw=False, result_type=None, args=(), **kwargs)",
    "signatureName": "apply",
    "returns": "Series or DataFrame",
    "returnsDescription": "Result of applying func along the given axis of the\nDataFrame.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L8584-L8741",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Function application, GroupBy & window",
    "title": "pandas.DataFrame.applymap",
    "description": "Apply a function to a Dataframe elementwise.",
    "signature": "DataFrame.applymap(func, na_action=None, **kwargs)",
    "signatureName": "applymap",
    "returns": "DataFrame",
    "returnsDescription": "Transformed DataFrame.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L8743-L8826",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Function application, GroupBy & window",
    "title": "pandas.DataFrame.agg",
    "description": "Aggregate using one or more operations over the specified axis.",
    "signature": "DataFrame.agg(func=None, axis=0, *args, **kwargs)",
    "signatureName": "agg",
    "returns": "scalar, Series or DataFrame",
    "returnsDescription": "The return can be:\n\nscalar : when Series.agg is called with single function\nSeries : when DataFrame.agg is called with a single function\nDataFrame : when DataFrame.agg is called with several functions\n\nReturn scalar, Series or DataFrame.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L8536-L8565",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Function application, GroupBy & window",
    "title": "pandas.DataFrame.aggregate",
    "description": "Aggregate using one or more operations over the specified axis.",
    "signature": "DataFrame.aggregate(func=None, axis=0, *args, **kwargs)",
    "signatureName": "aggregate",
    "returns": "scalar, Series or DataFrame",
    "returnsDescription": "The return can be:\n\nscalar : when Series.agg is called with single function\nSeries : when DataFrame.agg is called with a single function\nDataFrame : when DataFrame.agg is called with several functions\n\nReturn scalar, Series or DataFrame.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L8536-L8565",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Function application, GroupBy & window",
    "title": "pandas.DataFrame.transform",
    "description": "Call func on self producing a DataFrame with transformed values.",
    "signature": "DataFrame.transform(func, axis=0, *args, **kwargs)",
    "signatureName": "transform",
    "returns": "DataFrame",
    "returnsDescription": "A DataFrame that must have the same length as self.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L8569-L8582",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Function application, GroupBy & window",
    "title": "pandas.DataFrame.groupby",
    "description": "Group DataFrame using a mapper or by a Series of columns.",
    "signature": "DataFrame.groupby(by=None, axis=0, level=None, as_index=True, sort=True, group_keys=True, squeeze=NoDefault.no_default, observed=False, dropna=True)",
    "signatureName": "groupby",
    "returns": "DataFrameGroupBy",
    "returnsDescription": "Returns a groupby object that contains information about the groups.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L7515-L7642",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Function application, GroupBy & window",
    "title": "pandas.DataFrame.ewm",
    "description": "Provide exponential weighted (EW) functions.",
    "signature": "DataFrame.ewm(com=None, span=None, halflife=None, alpha=None, min_periods=0, adjust=True, ignore_na=False, axis=0, times=None)",
    "signatureName": "ewm",
    "returns": "DataFrame",
    "returnsDescription": "A Window sub-classed for the particular operation.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L10903-L10931",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.all",
    "description": "Return whether all elements are True, potentially over an axis.",
    "signature": "DataFrame.all(axis=0, bool_only=None, skipna=True, level=None, **kwargs)",
    "signatureName": "all",
    "returns": "Series or DataFrame",
    "returnsDescription": "If level is specified, then, DataFrame is returned; otherwise, Series\nis returned.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L10535-L10546",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.any",
    "description": "Return whether any element is True, potentially over an axis.",
    "signature": "DataFrame.any(axis=0, bool_only=None, skipna=True, level=None, **kwargs)",
    "signatureName": "any",
    "returns": "Series or DataFrame",
    "returnsDescription": "If level is specified, then, DataFrame is returned; otherwise, Series\nis returned.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L10520-L10531",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.clip",
    "description": "Trim values at input threshold(s).",
    "signature": "DataFrame.clip(lower=None, upper=None, axis=None, inplace=False, *args, **kwargs)",
    "signatureName": "clip",
    "returns": "Series or DataFrame or None",
    "returnsDescription": "Same type as calling object with the values outside the\nclip boundaries replaced or None if inplace=True.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L10687-L10699",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.corr",
    "description": "Compute pairwise correlation of columns, excluding NA\/null values.",
    "signature": "DataFrame.corr(method='pearson', min_periods=1)",
    "signatureName": "corr",
    "returns": "DataFrame",
    "returnsDescription": "Correlation matrix.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L9326-L9414",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.count",
    "description": "Count non-NA cells for each column or row.",
    "signature": "DataFrame.count(axis=0, level=None, numeric_only=False)",
    "signatureName": "count",
    "returns": "Series or DataFrame",
    "returnsDescription": "For each column\/row the number of non-NA\/null entries.\nIf level is specified returns a DataFrame.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L9626-L9728",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.cov",
    "description": "Compute pairwise covariance of columns, excluding NA\/null values.",
    "signature": "DataFrame.cov(min_periods=None, ddof=1)",
    "signatureName": "cov",
    "returns": "DataFrame",
    "returnsDescription": "The covariance matrix of the series of the DataFrame.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L9416-L9530",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.cummax",
    "description": "Return cumulative maximum over a DataFrame or Series axis.",
    "signature": "DataFrame.cummax(axis=None, skipna=True, *args, **kwargs)",
    "signatureName": "cummax",
    "returns": "Series or DataFrame",
    "returnsDescription": "Return cumulative maximum of Series or DataFrame.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L10646-L10656",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.cummin",
    "description": "Return cumulative minimum over a DataFrame or Series axis.",
    "signature": "DataFrame.cummin(axis=None, skipna=True, *args, **kwargs)",
    "signatureName": "cummin",
    "returns": "Series or DataFrame",
    "returnsDescription": "Return cumulative minimum of Series or DataFrame.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L10632-L10642",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.cumprod",
    "description": "Return cumulative product over a DataFrame or Series axis.",
    "signature": "DataFrame.cumprod(axis=None, skipna=True, *args, **kwargs)",
    "signatureName": "cumprod",
    "returns": "Series or DataFrame",
    "returnsDescription": "Return cumulative product of Series or DataFrame.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L10674-L10684",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.cumsum",
    "description": "Return cumulative sum over a DataFrame or Series axis.",
    "signature": "DataFrame.cumsum(axis=None, skipna=True, *args, **kwargs)",
    "signatureName": "cumsum",
    "returns": "Series or DataFrame",
    "returnsDescription": "Return cumulative sum of Series or DataFrame.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L10660-L10670",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.describe",
    "description": "Generate descriptive statistics.",
    "signature": "DataFrame.describe(percentiles=None, include=None, exclude=None, datetime_is_numeric=False)",
    "signatureName": "describe",
    "returns": "Series or DataFrame",
    "returnsDescription": "Summary statistics of the Series or Dataframe provided.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L9775-L10030",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.kurt",
    "description": "Return unbiased kurtosis over requested axis.",
    "signature": "DataFrame.kurt(axis=None, skipna=None, level=None, numeric_only=None, **kwargs)",
    "signatureName": "kurt",
    "returns": "Series or DataFrame (if level specified)",
    "returnsDescription": "",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L10770-L10784",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.kurtosis",
    "description": "Return unbiased kurtosis over requested axis.",
    "signature": "DataFrame.kurtosis(axis=None, skipna=None, level=None, numeric_only=None, **kwargs)",
    "signatureName": "kurtosis",
    "returns": "Series or DataFrame (if level specified)",
    "returnsDescription": "",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L10770-L10784",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.mad",
    "description": "Return the mean absolute deviation of the values over the requested axis.",
    "signature": "DataFrame.mad(axis=None, skipna=None, level=None)",
    "signatureName": "mad",
    "returns": "Series or DataFrame (if level specified)",
    "returnsDescription": "",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L10552-L10563",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.max",
    "description": "Return the maximum of the values over the requested axis.",
    "signature": "DataFrame.max(axis=None, skipna=None, level=None, numeric_only=None, **kwargs)",
    "signatureName": "max",
    "returns": "Series or DataFrame (if level specified)",
    "returnsDescription": "",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L10806-L10819",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.mean",
    "description": "Return the mean of the values over the requested axis.",
    "signature": "DataFrame.mean(axis=None, skipna=None, level=None, numeric_only=None, **kwargs)",
    "signatureName": "mean",
    "returns": "Series or DataFrame (if level specified)",
    "returnsDescription": "",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L10740-L10751",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.median",
    "description": "Return the median of the values over the requested axis.",
    "signature": "DataFrame.median(axis=None, skipna=None, level=None, numeric_only=None, **kwargs)",
    "signatureName": "median",
    "returns": "Series or DataFrame (if level specified)",
    "returnsDescription": "",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L10789-L10802",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.min",
    "description": "Return the minimum of the values over the requested axis.",
    "signature": "DataFrame.min(axis=None, skipna=None, level=None, numeric_only=None, **kwargs)",
    "signatureName": "min",
    "returns": "Series or DataFrame (if level specified)",
    "returnsDescription": "",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L10823-L10836",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.mode",
    "description": "Get the mode(s) of each element along the selected axis.",
    "signature": "DataFrame.mode(axis=0, numeric_only=False, dropna=True)",
    "signatureName": "mode",
    "returns": "DataFrame",
    "returnsDescription": "The modes of each column or row.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L10126-L10216",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.pct_change",
    "description": "Percentage change between the current and a prior element.",
    "signature": "DataFrame.pct_change(periods=1, fill_method='pad', limit=None, freq=None, **kwargs)",
    "signatureName": "pct_change",
    "returns": "chgSeries or DataFrame",
    "returnsDescription": "The same type as the calling object.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L10032-L10171",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.prod",
    "description": "Return the product of the values over the requested axis.",
    "signature": "DataFrame.prod(axis=None, skipna=None, level=None, numeric_only=None, min_count=0, **kwargs)",
    "signatureName": "prod",
    "returns": "Series or DataFrame (if level specified)",
    "returnsDescription": "",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L10714-L10735",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.product",
    "description": "Return the product of the values over the requested axis.",
    "signature": "DataFrame.product(axis=None, skipna=None, level=None, numeric_only=None, min_count=0, **kwargs)",
    "signatureName": "product",
    "returns": "Series or DataFrame (if level specified)",
    "returnsDescription": "",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L10714-L10735",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.quantile",
    "description": "Return values at the given quantile over requested axis.",
    "signature": "DataFrame.quantile(q=0.5, axis=0, numeric_only=True, interpolation='linear')",
    "signatureName": "quantile",
    "returns": "Series or DataFrame",
    "returnsDescription": "If q is an array, a DataFrame will be returned where theindex is q, the columns are the columns of self, and the\nvalues are the quantiles.\n\nIf q is a float, a Series will be returned where theindex is the columns of self and the values are the quantiles.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L10218-L10316",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.round",
    "description": "Round a DataFrame to a variable number of decimal places.",
    "signature": "DataFrame.round(decimals=0, *args, **kwargs)",
    "signatureName": "round",
    "returns": "DataFrame",
    "returnsDescription": "A DataFrame with the affected columns rounded to the specified\nnumber of decimal places.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L9207-L9321",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.sem",
    "description": "Return unbiased standard error of the mean over requested axis.",
    "signature": "DataFrame.sem(axis=None, skipna=None, level=None, ddof=1, numeric_only=None, **kwargs)",
    "signatureName": "sem",
    "returns": "Series or DataFrame (if level specified)",
    "returnsDescription": "",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L10567-L10585",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.skew",
    "description": "Return unbiased skew over requested axis.",
    "signature": "DataFrame.skew(axis=None, skipna=None, level=None, numeric_only=None, **kwargs)",
    "signatureName": "skew",
    "returns": "Series or DataFrame (if level specified)",
    "returnsDescription": "",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L10755-L10766",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.sum",
    "description": "Return the sum of the values over the requested axis.",
    "signature": "DataFrame.sum(axis=None, skipna=None, level=None, numeric_only=None, min_count=0, **kwargs)",
    "signatureName": "sum",
    "returns": "Series or DataFrame (if level specified)",
    "returnsDescription": "",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L10688-L10710",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.std",
    "description": "Return sample standard deviation over requested axis.",
    "signature": "DataFrame.std(axis=None, skipna=None, level=None, ddof=1, numeric_only=None, **kwargs)",
    "signatureName": "std",
    "returns": "Series or DataFrame (if level specified)",
    "returnsDescription": "",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L10610-L10628",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Computations \/ descriptive stats",
    "title": "pandas.DataFrame.var",
    "description": "Return unbiased variance over requested axis.",
    "signature": "DataFrame.var(axis=None, skipna=None, level=None, ddof=1, numeric_only=None, **kwargs)",
    "signatureName": "var",
    "returns": "Series or DataFrame (if level specified)",
    "returnsDescription": "",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L10589-L10606",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reindexing \/ selection \/ label manipulation",
    "title": "pandas.DataFrame.add_prefix",
    "description": "Prefix labels with string prefix.",
    "signature": "DataFrame.add_prefix(prefix)",
    "signatureName": "add_prefix",
    "returns": "Series or DataFrame",
    "returnsDescription": "New Series or DataFrame with updated labels.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L4241-L4303",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reindexing \/ selection \/ label manipulation",
    "title": "pandas.DataFrame.add_suffix",
    "description": "Suffix labels with string suffix.",
    "signature": "DataFrame.add_suffix(suffix)",
    "signatureName": "add_suffix",
    "returns": "Series or DataFrame",
    "returnsDescription": "New Series or DataFrame with updated labels.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L4305-L4367",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reindexing \/ selection \/ label manipulation",
    "title": "pandas.DataFrame.align",
    "description": "Align two objects on their axes with the specified join method.",
    "signature": "DataFrame.align(other, join='outer', axis=None, level=None, copy=True, fill_value=None, method=None, limit=None, fill_axis=0, broadcast_axis=None)",
    "signatureName": "align",
    "returns": "(left, right)(DataFrame, type of other)",
    "returnsDescription": "Aligned objects.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L4663-L4688",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reindexing \/ selection \/ label manipulation",
    "title": "pandas.DataFrame.at_time",
    "description": "Select values at particular time of day (e.g., 9:30AM).",
    "signature": "DataFrame.at_time(time, asof=False, axis=None)",
    "signatureName": "at_time",
    "returns": "Series or DataFrame",
    "returnsDescription": "",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L7571-L7626",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reindexing \/ selection \/ label manipulation",
    "title": "pandas.DataFrame.between_time",
    "description": "Select values between particular times of the day (e.g., 9:00-9:30 AM).",
    "signature": "DataFrame.between_time(start_time, end_time, include_start=True, include_end=True, axis=None)",
    "signatureName": "between_time",
    "returns": "Series or DataFrame",
    "returnsDescription": "Data from the original object filtered to the specified dates range.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L7628-L7709",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reindexing \/ selection \/ label manipulation",
    "title": "pandas.DataFrame.drop",
    "description": "Drop specified labels from rows or columns.",
    "signature": "DataFrame.drop(labels=None, axis=0, index=None, columns=None, level=None, inplace=False, errors='raise')",
    "signatureName": "drop",
    "returns": "DataFrame or None",
    "returnsDescription": "DataFrame without the removed index or column labels or\nNone if inplace=True.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L4774-L4914",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reindexing \/ selection \/ label manipulation",
    "title": "pandas.DataFrame.drop_duplicates",
    "description": "Return DataFrame with duplicate rows removed.",
    "signature": "DataFrame.drop_duplicates(subset=None, keep='first', inplace=False, ignore_index=False)",
    "signatureName": "drop_duplicates",
    "returns": "DataFrame or None",
    "returnsDescription": "DataFrame with duplicates removed or None if inplace=True.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L5977-L6073",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reindexing \/ selection \/ label manipulation",
    "title": "pandas.DataFrame.first",
    "description": "Select initial periods of time series data based on a date offset.",
    "signature": "DataFrame.first(offset)",
    "signatureName": "first",
    "returns": "Series or DataFrame",
    "returnsDescription": "A subset of the caller.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L8142-L8213",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reindexing \/ selection \/ label manipulation",
    "title": "pandas.DataFrame.last",
    "description": "Select final periods of time series data based on a date offset.",
    "signature": "DataFrame.last(offset)",
    "signatureName": "last",
    "returns": "Series or DataFrame",
    "returnsDescription": "A subset of the caller.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L8215-L8278",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reindexing \/ selection \/ label manipulation",
    "title": "pandas.DataFrame.reindex",
    "description": "Conform Series\/DataFrame to new index with optional filling logic.",
    "signature": "DataFrame.reindex(labels=None, index=None, columns=None, axis=None, method=None, copy=True, level=None, fill_value=nan, limit=None, tolerance=None)",
    "signatureName": "reindex",
    "returns": "Series\/DataFrame with changed index.",
    "returnsDescription": "",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L4753-L4772",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reindexing \/ selection \/ label manipulation",
    "title": "pandas.DataFrame.reindex_like",
    "description": "Return an object with matching indices as other object.",
    "signature": "DataFrame.reindex_like(other, method=None, copy=True, limit=None, tolerance=None)",
    "signatureName": "reindex_like",
    "returns": "Series or DataFrame",
    "returnsDescription": "Same type as caller, but with changed indices on each axis.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L4009-L4119",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reindexing \/ selection \/ label manipulation",
    "title": "pandas.DataFrame.rename",
    "description": "Alter axes labels.",
    "signature": "DataFrame.rename(mapper=None, index=None, columns=None, axis=None, copy=True, inplace=False, level=None, errors='ignore')",
    "signatureName": "rename",
    "returns": "DataFrame or None",
    "returnsDescription": "DataFrame with the renamed axis labels or None if inplace=True.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L4916-L5048",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reindexing \/ selection \/ label manipulation",
    "title": "pandas.DataFrame.rename_axis",
    "description": "Set the name of the axis for the index or columns.",
    "signature": "DataFrame.rename_axis(mapper=None, index=None, columns=None, axis=None, copy=True, inplace=False)",
    "signatureName": "rename_axis",
    "returns": "Series, DataFrame, or None",
    "returnsDescription": "The same type as the caller or None if inplace=True.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L1166-L1335",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reindexing \/ selection \/ label manipulation",
    "title": "pandas.DataFrame.reset_index",
    "description": "Reset the index, or a level of it.",
    "signature": "DataFrame.reset_index(level=None, drop=False, inplace=False, col_level=0, col_fill='')",
    "signatureName": "reset_index",
    "returns": "DataFrame or None",
    "returnsDescription": "DataFrame with the new index or None if inplace=True.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L5589-L5805",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reindexing \/ selection \/ label manipulation",
    "title": "pandas.DataFrame.sample",
    "description": "Return a random sample of items from an axis of object.",
    "signature": "DataFrame.sample(n=None, frac=None, replace=False, weights=None, random_state=None, axis=None, ignore_index=False)",
    "signatureName": "sample",
    "returns": "Series or DataFrame",
    "returnsDescription": "A new object of same type as caller containing n items randomly\nsampled from the caller object.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L5150-L5370",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reindexing \/ selection \/ label manipulation",
    "title": "pandas.DataFrame.set_axis",
    "description": "Assign desired index to given axis.",
    "signature": "DataFrame.set_axis(labels, axis=0, inplace=False)",
    "signatureName": "set_axis",
    "returns": "renamedDataFrame or None",
    "returnsDescription": "An object of type DataFrame or None if inplace=True.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L4710-L4751",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reindexing \/ selection \/ label manipulation",
    "title": "pandas.DataFrame.set_index",
    "description": "Set the DataFrame index using existing columns.",
    "signature": "DataFrame.set_index(keys, drop=True, append=False, inplace=False, verify_integrity=False)",
    "signatureName": "set_index",
    "returns": "DataFrame or None",
    "returnsDescription": "Changed row labels or None if inplace=True.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L5322-L5522",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Missing data handling",
    "title": "pandas.DataFrame.backfill",
    "description": "Synonym for DataFrame.fillna() with method='bfill'.",
    "signature": "DataFrame.backfill(axis=None, inplace=False, limit=None, downcast=None)",
    "signatureName": "backfill",
    "returns": "Series\/DataFrame or None",
    "returnsDescription": "Object with missing values filled or None if inplace=True.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L6418-L6436",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Missing data handling",
    "title": "pandas.DataFrame.fillna",
    "description": "Fill NA\/NaN values using the specified method.",
    "signature": "DataFrame.fillna(value=None, method=None, axis=None, inplace=False, limit=None, downcast=None)",
    "signatureName": "fillna",
    "returns": "DataFrame or None",
    "returnsDescription": "Object with missing values filled or None if inplace=True.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L5165-L5183",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Missing data handling",
    "title": "pandas.DataFrame.bfill",
    "description": "Synonym for DataFrame.fillna() with method='bfill'.",
    "signature": "DataFrame.bfill(axis=None, inplace=False, limit=None, downcast=None)",
    "signatureName": "bfill",
    "returns": "Series\/DataFrame or None",
    "returnsDescription": "Object with missing values filled or None if inplace=True.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L10677-L10685",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Missing data handling",
    "title": "pandas.DataFrame.fillna",
    "description": "Fill NA\/NaN values using the specified method.",
    "signature": "DataFrame.fillna(value=None, method=None, axis=None, inplace=False, limit=None, downcast=None)",
    "signatureName": "fillna",
    "returns": "DataFrame or None",
    "returnsDescription": "Object with missing values filled or None if inplace=True.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L5165-L5183",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Missing data handling",
    "title": "pandas.DataFrame.dropna",
    "description": "Remove missing values.",
    "signature": "DataFrame.dropna(axis=0, how='any', thresh=None, subset=None, inplace=False)",
    "signatureName": "dropna",
    "returns": "DataFrame or None",
    "returnsDescription": "DataFrame with NA entries dropped from it or None if inplace=True.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L5827-L5975",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Missing data handling",
    "title": "pandas.DataFrame.ffill",
    "description": "Synonym for DataFrame.fillna() with method='ffill'.",
    "signature": "DataFrame.ffill(axis=None, inplace=False, limit=None, downcast=None)",
    "signatureName": "ffill",
    "returns": "Series\/DataFrame or None",
    "returnsDescription": "Object with missing values filled or None if inplace=True.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L10667-L10675",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Missing data handling",
    "title": "pandas.DataFrame.fillna",
    "description": "Fill NA\/NaN values using the specified method.",
    "signature": "DataFrame.fillna(value=None, method=None, axis=None, inplace=False, limit=None, downcast=None)",
    "signatureName": "fillna",
    "returns": "DataFrame or None",
    "returnsDescription": "Object with missing values filled or None if inplace=True.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L5165-L5183",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Missing data handling",
    "title": "pandas.DataFrame.fillna",
    "description": "Fill NA\/NaN values using the specified method.",
    "signature": "DataFrame.fillna(value=None, method=None, axis=None, inplace=False, limit=None, downcast=None)",
    "signatureName": "fillna",
    "returns": "DataFrame or None",
    "returnsDescription": "Object with missing values filled or None if inplace=True.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L5165-L5183",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Missing data handling",
    "title": "pandas.DataFrame.interpolate",
    "description": "Fill NaN values using an interpolation method.",
    "signature": "DataFrame.interpolate(method='linear', axis=0, limit=None, inplace=False, limit_direction=None, limit_area=None, downcast=None, **kwargs)",
    "signatureName": "interpolate",
    "returns": "Series or DataFrame or None",
    "returnsDescription": "Returns the same object type as the caller, interpolated at\nsome or all NaN values or None if inplace=True.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L10701-L10722",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Missing data handling",
    "title": "pandas.DataFrame.isna",
    "description": "Detect missing values.",
    "signature": "DataFrame.isna()",
    "signatureName": "isna",
    "returns": "DataFrame",
    "returnsDescription": "Mask of bool values for each element in DataFrame that\nindicates whether an element is an NA value.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L5810-L5813",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Missing data handling",
    "title": "pandas.DataFrame.isnull",
    "description": "Detect missing values.",
    "signature": "DataFrame.isnull()",
    "signatureName": "isnull",
    "returns": "DataFrame",
    "returnsDescription": "Mask of bool values for each element in DataFrame that\nindicates whether an element is an NA value.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L5815-L5817",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Missing data handling",
    "title": "pandas.DataFrame.notna",
    "description": "Detect existing (non-missing) values.",
    "signature": "DataFrame.notna()",
    "signatureName": "notna",
    "returns": "DataFrame",
    "returnsDescription": "Mask of bool values for each element in DataFrame that\nindicates whether an element is not an NA value.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L5819-L5821",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Missing data handling",
    "title": "pandas.DataFrame.notnull",
    "description": "Detect existing (non-missing) values.",
    "signature": "DataFrame.notnull()",
    "signatureName": "notnull",
    "returns": "DataFrame",
    "returnsDescription": "Mask of bool values for each element in DataFrame that\nindicates whether an element is not an NA value.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L5823-L5825",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Missing data handling",
    "title": "pandas.DataFrame.pad",
    "description": "Synonym for DataFrame.fillna() with method='ffill'.",
    "signature": "DataFrame.pad(axis=None, inplace=False, limit=None, downcast=None)",
    "signatureName": "pad",
    "returns": "Series\/DataFrame or None",
    "returnsDescription": "Object with missing values filled or None if inplace=True.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L6396-L6414",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Missing data handling",
    "title": "pandas.DataFrame.fillna",
    "description": "Fill NA\/NaN values using the specified method.",
    "signature": "DataFrame.fillna(value=None, method=None, axis=None, inplace=False, limit=None, downcast=None)",
    "signatureName": "fillna",
    "returns": "DataFrame or None",
    "returnsDescription": "Object with missing values filled or None if inplace=True.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L5165-L5183",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Missing data handling",
    "title": "pandas.DataFrame.replace",
    "description": "Replace values given in to_replace with value.",
    "signature": "DataFrame.replace(to_replace=None, value=None, inplace=False, limit=None, regex=False, method='pad')",
    "signatureName": "replace",
    "returns": "DataFrame",
    "returnsDescription": "Object after replacement.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L5228-L5245",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reshaping, sorting, transposing",
    "title": "pandas.DataFrame.droplevel",
    "description": "Return Series\/DataFrame with requested index \/ column level(s) removed.",
    "signature": "DataFrame.droplevel(level, axis=0)",
    "signatureName": "droplevel",
    "returns": "Series\/DataFrame",
    "returnsDescription": "Series\/DataFrame with requested index \/ column level(s) removed.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L806-L867",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reshaping, sorting, transposing",
    "title": "pandas.DataFrame.pivot",
    "description": "Return reshaped DataFrame organized by given index \/ column values.",
    "signature": "DataFrame.pivot(index=None, columns=None, values=None)",
    "signatureName": "pivot",
    "returns": "DataFrame",
    "returnsDescription": "Returns reshaped DataFrame.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L7788-L7793",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reshaping, sorting, transposing",
    "title": "pandas.DataFrame.pivot_table",
    "description": "Create a spreadsheet-style pivot table as a DataFrame.",
    "signature": "DataFrame.pivot_table(values=None, index=None, columns=None, aggfunc='mean', fill_value=None, margins=False, dropna=True, margins_name='All', observed=False, sort=True)",
    "signatureName": "pivot_table",
    "returns": "DataFrame",
    "returnsDescription": "An Excel style pivot table.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L7934-L7963",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reshaping, sorting, transposing",
    "title": "pandas.DataFrame.reorder_levels",
    "description": "Rearrange index levels using input order. May not drop or duplicate levels.",
    "signature": "DataFrame.reorder_levels(order, axis=0)",
    "signatureName": "reorder_levels",
    "returns": "DataFrame",
    "returnsDescription": "",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L6815-L6843",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reshaping, sorting, transposing",
    "title": "pandas.DataFrame.sort_values",
    "description": "Sort by the values along either axis.",
    "signature": "DataFrame.sort_values(by, axis=0, ascending=True, inplace=False, kind='quicksort', na_position='last', ignore_index=False, key=None)",
    "signatureName": "sort_values",
    "returns": "DataFrame or None",
    "returnsDescription": "DataFrame with sorted values or None if inplace=True.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L6216-L6289",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reshaping, sorting, transposing",
    "title": "pandas.DataFrame.sort_index",
    "description": "Sort object by labels (along an axis).",
    "signature": "DataFrame.sort_index(axis=0, level=None, ascending=True, inplace=False, kind='quicksort', na_position='last', sort_remaining=True, ignore_index=False, key=None)",
    "signatureName": "sort_index",
    "returns": "DataFrame or None",
    "returnsDescription": "The original DataFrame sorted by the labels or None if inplace=True.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L6291-L6403",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reshaping, sorting, transposing",
    "title": "pandas.DataFrame.nlargest",
    "description": "Return the first n rows ordered by columns in descending order.",
    "signature": "DataFrame.nlargest(n, columns, keep='first')",
    "signatureName": "nlargest",
    "returns": "DataFrame",
    "returnsDescription": "The first n rows ordered by the given columns in descending\norder.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L6531-L6636",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reshaping, sorting, transposing",
    "title": "pandas.DataFrame.nsmallest",
    "description": "Return the first n rows ordered by columns in ascending order.",
    "signature": "DataFrame.nsmallest(n, columns, keep='first')",
    "signatureName": "nsmallest",
    "returns": "DataFrame",
    "returnsDescription": "",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L6638-L6736",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reshaping, sorting, transposing",
    "title": "pandas.DataFrame.swaplevel",
    "description": "Swap levels i and j in a MultiIndex.",
    "signature": "DataFrame.swaplevel(i=- 2, j=- 1, axis=0)",
    "signatureName": "swaplevel",
    "returns": "DataFrame",
    "returnsDescription": "DataFrame with levels swapped in MultiIndex.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L6738-L6813",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reshaping, sorting, transposing",
    "title": "pandas.DataFrame.stack",
    "description": "Stack the prescribed level(s) from columns to index.",
    "signature": "DataFrame.stack(level=- 1, dropna=True)",
    "signatureName": "stack",
    "returns": "DataFrame or Series",
    "returnsDescription": "Stacked dataframe or series.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L7965-L8136",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reshaping, sorting, transposing",
    "title": "pandas.DataFrame.unstack",
    "description": "Pivot a level of the (necessarily hierarchical) index labels.",
    "signature": "DataFrame.unstack(level=- 1, fill_value=None)",
    "signatureName": "unstack",
    "returns": "Series or DataFrame",
    "returnsDescription": "",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L8266-L8327",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reshaping, sorting, transposing",
    "title": "pandas.DataFrame.melt",
    "description": "Unpivot a DataFrame from wide to long format, optionally leaving identifiers set.",
    "signature": "DataFrame.melt(id_vars=None, value_vars=None, var_name=None, value_name='value', col_level=None, ignore_index=True)",
    "signatureName": "melt",
    "returns": "DataFrame",
    "returnsDescription": "Unpivoted DataFrame.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L8329-L8348",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reshaping, sorting, transposing",
    "title": "pandas.DataFrame.explode",
    "description": "Transform each element of a list-like to a row, replicating index values.",
    "signature": "DataFrame.explode(column, ignore_index=False)",
    "signatureName": "explode",
    "returns": "DataFrame",
    "returnsDescription": "Exploded lists to rows of the subset columns;\nindex will be duplicated for these rows.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L8138-L8264",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reshaping, sorting, transposing",
    "title": "pandas.DataFrame.squeeze",
    "description": "Squeeze 1 dimensional axis objects into scalars.",
    "signature": "DataFrame.squeeze(axis=None)",
    "signatureName": "squeeze",
    "returns": "DataFrame, Series, or scalar",
    "returnsDescription": "The projection after squeezing axis or all the axes.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L875-L985",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Reshaping, sorting, transposing",
    "title": "pandas.DataFrame.transpose",
    "description": "Transpose index and columns.",
    "signature": "DataFrame.transpose(*args, copy=False)",
    "signatureName": "transpose",
    "returns": "DataFrame",
    "returnsDescription": "The transposed DataFrame.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L3228-L3357",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Combining \/ comparing \/ joining \/ merging",
    "title": "pandas.DataFrame.append",
    "description": "Append rows of other to the end of caller, returning a new object.",
    "signature": "DataFrame.append(other, ignore_index=False, verify_integrity=False, sort=False)",
    "signatureName": "append",
    "returns": "DataFrame",
    "returnsDescription": "A new DataFrame consisting of the rows of caller and the rows of other.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L8831-L8972",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Combining \/ comparing \/ joining \/ merging",
    "title": "pandas.DataFrame.assign",
    "description": "Assign new columns to a DataFrame.",
    "signature": "DataFrame.assign(**kwargs)",
    "signatureName": "assign",
    "returns": "DataFrame",
    "returnsDescription": "A new DataFrame with the new columns in addition to\nall the existing columns.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L4421-L4487",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Combining \/ comparing \/ joining \/ merging",
    "title": "pandas.DataFrame.compare",
    "description": "Compare to another DataFrame and show the differences.",
    "signature": "DataFrame.compare(other, align_axis=1, keep_shape=False, keep_equal=False)",
    "signatureName": "compare",
    "returns": "DataFrame",
    "returnsDescription": "DataFrame that shows the differences stacked side by side.\nThe resulting index will be a MultiIndex with \u00e2\u0080\u0098self\u00e2\u0080\u0099 and \u00e2\u0080\u0098other\u00e2\u0080\u0099\nstacked alternately at the inner level.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L7000-L7118",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Combining \/ comparing \/ joining \/ merging",
    "title": "pandas.DataFrame.join",
    "description": "Join columns of another DataFrame.",
    "signature": "DataFrame.join(other, on=None, how='left', lsuffix='', rsuffix='', sort=False)",
    "signatureName": "join",
    "returns": "DataFrame",
    "returnsDescription": "A dataframe containing columns from both the caller and other.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L8974-L9102",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Combining \/ comparing \/ joining \/ merging",
    "title": "pandas.DataFrame.merge",
    "description": "Merge DataFrame or named Series objects with a database-style join.",
    "signature": "DataFrame.merge(right, how='inner', on=None, left_on=None, right_on=None, left_index=False, right_index=False, sort=False, suffixes=('_x', '_y'), copy=True, indicator=False, validate=None)",
    "signatureName": "merge",
    "returns": "DataFrame",
    "returnsDescription": "A DataFrame of the two merged objects.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L9172-L9205",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Time Series-related",
    "title": "pandas.DataFrame.asfreq",
    "description": "Convert time series to specified frequency.",
    "signature": "DataFrame.asfreq(freq, method=None, how=None, normalize=False, fill_value=None)",
    "signatureName": "asfreq",
    "returns": "DataFrame",
    "returnsDescription": "DataFrame object reindexed to the specified frequency.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L10318-L10333",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Time Series-related",
    "title": "pandas.DataFrame.asof",
    "description": "Return the last row(s) without any NaNs before where.",
    "signature": "DataFrame.asof(where, subset=None)",
    "signatureName": "asof",
    "returns": "scalar, Series, or DataFrame",
    "returnsDescription": "The return can be:\n\nscalar : when self is a Series and where is a scalar\nSeries: when self is a Series and where is an array-like,\nor when self is a DataFrame and where is a scalar\nDataFrame : when self is a DataFrame and where is an\narray-like\n\nReturn scalar, Series, or DataFrame.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L6922-L7088",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Time Series-related",
    "title": "pandas.DataFrame.shift",
    "description": "Shift index by desired number of periods with an optional time freq.",
    "signature": "DataFrame.shift(periods=1, freq=None, axis=0, fill_value=NoDefault.no_default)",
    "signatureName": "shift",
    "returns": "DataFrame",
    "returnsDescription": "Copy of input object, shifted.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L5282-L5320",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Time Series-related",
    "title": "pandas.DataFrame.tshift",
    "description": "Shift the time index, using the index\u00e2\u0080\u0099s frequency if available.",
    "signature": "DataFrame.tshift(periods=1, freq=None, axis=0)",
    "signatureName": "tshift",
    "returns": "shiftedSeries\/DataFrame",
    "returnsDescription": "",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L9273-L9315",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Time Series-related",
    "title": "pandas.DataFrame.to_period",
    "description": "Convert DataFrame from DatetimeIndex to PeriodIndex.",
    "signature": "DataFrame.to_period(freq=None, axis=0, copy=True)",
    "signatureName": "to_period",
    "returns": "DataFrame with PeriodIndex",
    "returnsDescription": "",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L10404-L10436",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Time Series-related",
    "title": "pandas.DataFrame.to_timestamp",
    "description": "Cast to DatetimeIndex of timestamps, at beginning of period.",
    "signature": "DataFrame.to_timestamp(freq=None, how='start', axis=0, copy=True)",
    "signatureName": "to_timestamp",
    "returns": "DataFrame with DatetimeIndex",
    "returnsDescription": "",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L10366-L10402",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Time Series-related",
    "title": "pandas.DataFrame.tz_localize",
    "description": "Localize tz-naive index of a Series or DataFrame to target time zone.",
    "signature": "DataFrame.tz_localize(tz, axis=0, level=None, copy=True, ambiguous='raise', nonexistent='raise')",
    "signatureName": "tz_localize",
    "returns": "Series or DataFrame",
    "returnsDescription": "Same type as the input.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/generic.py#L9531-L9698",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Sparse accessor",
    "title": "pandas.DataFrame.sparse.from_spmatrix",
    "description": "Create a new DataFrame from a scipy sparse matrix.",
    "signature": "classmethod DataFrame.sparse.from_spmatrix(data, index=None, columns=None)",
    "signatureName": "from_spmatrix",
    "returns": "DataFrame",
    "returnsDescription": "Each column of the DataFrame is stored as a\narrays.SparseArray.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/arrays\/sparse\/accessor.py#L228-L283",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Sparse accessor",
    "title": "pandas.DataFrame.sparse.to_dense",
    "description": "Convert a DataFrame with sparse values to dense.",
    "signature": "DataFrame.sparse.to_dense()",
    "signatureName": "to_dense",
    "returns": "DataFrame",
    "returnsDescription": "A DataFrame with the same values stored as dense arrays.",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/arrays\/sparse\/accessor.py#L285-L308",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Serialization \/ IO \/ conversion",
    "title": "pandas.DataFrame.from_dict",
    "description": "Construct DataFrame from dict of array-like or dicts.",
    "signature": "classmethod DataFrame.from_dict(data, orient='columns', dtype=None, columns=None)",
    "signatureName": "from_dict",
    "returns": "DataFrame",
    "returnsDescription": "",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L1510-L1593",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  },
  {
    "sectionTitle": "Serialization \/ IO \/ conversion",
    "title": "pandas.DataFrame.from_records",
    "description": "Convert structured or record ndarray to DataFrame.",
    "signature": "classmethod DataFrame.from_records(data, index=None, exclude=None, columns=None, coerce_float=False, nrows=None)",
    "signatureName": "from_records",
    "returns": "DataFrame",
    "returnsDescription": "",
    "sourceUrl": "https:\/\/github.com\/pandas-dev\/pandas\/blob\/v1.3.3\/pandas\/core\/frame.py#L1943-L2124",
    "framework": "pandas",
    "frameworkVersion": "1.3.3"
  }
]