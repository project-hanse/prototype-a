{"actions": [{"operation": {"operationId": "0759dede-2cee-433c-b314-10a8fa456e62", "operationName": "aggregate", "operationFullName": "pandas.DataFrame.aggregate", "inputTypes": [2], "outputType": 2, "outputTypes": [2], "framework": "pandas", "frameworkVersion": "1.3.3", "sectionTitle": "Function application, GroupBy & window", "title": "pandas.DataFrame.aggregate", "description": "Aggregate using one or more operations over the specified axis.", "signature": "DataFrame.aggregate(func=None, axis=0)", "signatureName": "aggregate", "returnsDescription": "The return can be:\n\nscalar : when Series.agg is called with single function\nSeries : when DataFrame.agg is called with a single function\nDataFrame : when DataFrame.agg is called with several functions\n\nReturn scalar, Series or DataFrame.", "sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.3.3/pandas/core/frame.py#L8536-L8565", "defaultConfig": {"func": "None", "axis": "0"}, "returns": "scalar, Series or DataFrame"}, "input_datasets": [{'type': 2, "id": "e45e08c3-1bd2-4755-8764-997df4bcea14"}]}, {"operation": {"operationId": "5c9b34fc-ac4f-4290-9dfe-418647509559", "operationName": "trim", "operationFullName": "OpIdPdSingleTrim", "inputTypes": [2], "outputType": 2, "outputTypes": [2], "framework": "pandas", "frameworkVersion": "1.3.3", "sectionTitle": "Custom Operations", "title": "OpIdPdSingleTrim", "description": null, "signature": null, "signatureName": null, "returnsDescription": null, "sourceUrl": null, "defaultConfig": {"first_n": "0", "last_n": "0"}, "returns": "DataFrame"}, "input_datasets": [{'type': 2, "id": "90748606-4520-4606-ace6-712699fc0288"}]}, {"operation": {"operationId": "c01f8b5a-3c71-466a-b2ab-2abb2aa105ba", "operationName": "fit", "operationFullName": "prophet.fit", "inputTypes": [2], "outputType": 4, "outputTypes": [4], "framework": "prophet", "frameworkVersion": "1.0.1", "sectionTitle": "Prophet", "title": "prophet.fit", "description": "Generates a model based on a given time series dataset.", "signature": "prophet.fit(df)", "signatureName": "fit", "returnsDescription": "A model based on the given time series dataset.", "sourceUrl": "https://facebook.github.io/prophet/docs/quick_start.html#python-api", "defaultConfig": {}, "returns": "Prophet"}, "input_datasets": [{'type': 2, "id": "02261381-d255-466e-a299-3c9a1d4d0a48"}]}, {"operation": {"operationId": "0759dede-2cee-433c-b314-10a8fa456e62", "operationName": "tz_localize", "operationFullName": "pandas.DataFrame.tz_localize", "inputTypes": [2], "outputType": 2, "outputTypes": [2], "framework": "pandas", "frameworkVersion": "1.3.3", "sectionTitle": "Time Series-related", "title": "pandas.DataFrame.tz_localize", "description": "Localize tz-naive index of a Series or DataFrame to target time zone.", "signature": "DataFrame.tz_localize(tz, axis=0, level=None, copy=True, ambiguous='raise', nonexistent='raise')", "signatureName": "tz_localize", "returnsDescription": "Same type as the input.", "sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.3.3/pandas/core/generic.py#L9531-L9698", "defaultConfig": {"tz": "", "axis": "0", "level": "None", "copy": "True", "ambiguous": "raise", "nonexistent": "raise"}, "returns": "Series or DataFrame"}, "input_datasets": [{'type': 2, "id": "02261381-d255-466e-a299-3c9a1d4d0a48"}]}, {"operation": {"operationId": "0759dede-2cee-433c-b314-10a8fa456e62", "operationName": "min", "operationFullName": "pandas.DataFrame.min", "inputTypes": [2], "outputType": 2, "outputTypes": [2], "framework": "pandas", "frameworkVersion": "1.3.3", "sectionTitle": "Computations / descriptive stats", "title": "pandas.DataFrame.min", "description": "Return the minimum of the values over the requested axis.", "signature": "DataFrame.min(axis=None, skipna=None, level=None, numeric_only=None)", "signatureName": "min", "returnsDescription": "", "sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.3.3/pandas/core/generic.py#L10823-L10836", "defaultConfig": {"axis": "None", "skipna": "None", "level": "None", "numeric_only": "None"}, "returns": "Series or DataFrame (if level specified)"}, "input_datasets": [{'type': 2, "id": "1976481d-0b64-41e7-9757-946e04d4ac8b"}]}, {"operation": {"operationId": "0b60e908-fae2-4d33-aa81-5d1fdc706c12", "operationName": "plot", "operationFullName": "PlotDataframe", "inputTypes": [2], "outputType": 3, "outputTypes": [3], "framework": "pandas", "frameworkVersion": "1.3.3", "sectionTitle": "Plotting", "title": "PlotDataframe", "description": "Plot a dataframe using matplotlib", "signature": null, "signatureName": null, "returnsDescription": null, "sourceUrl": null, "defaultConfig": {"x": "None", "y": "None", "kind": "line", "ax": "None", "subplots": "false", "sharex": "false", "sharey": "false", "layout": "None", "use_index": "true", "title": "None", "grid": "None", "legend": "true"}, "returns": "StaticPlot"}, "input_datasets": [{'type': 2, "id": "23f68652-1724-49c7-bf41-8a4d58939e72"}]}], "pipeline_id": "4ec37e41-53ee-467e-9548-4727b8a00d78", "started_at": 1652384281, "task_id": 31, "dataset_id": 31, "task_type_id": "TaskType.SUPERVISED_CLASSIFICATION", "batch_number": 2, "completed_at": 1652384347}
