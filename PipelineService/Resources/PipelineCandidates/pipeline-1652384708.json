{"actions": [{"operation": {"operationId": "0759dede-2cee-433c-b314-10a8fa456e62", "operationName": "sem", "operationFullName": "pandas.DataFrame.sem", "inputTypes": [2], "outputType": 2, "outputTypes": [2], "framework": "pandas", "frameworkVersion": "1.3.3", "sectionTitle": "Computations / descriptive stats", "title": "pandas.DataFrame.sem", "description": "Return unbiased standard error of the mean over requested axis.", "signature": "DataFrame.sem(axis=None, skipna=None, level=None, ddof=1, numeric_only=None)", "signatureName": "sem", "returnsDescription": "", "sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.3.3/pandas/core/generic.py#L10567-L10585", "defaultConfig": {"axis": "None", "skipna": "None", "level": "None", "ddof": "1", "numeric_only": "None"}, "returns": "Series or DataFrame (if level specified)"}, "input_datasets": [{'type': 2, "id": "cc04c3ca-1603-478e-90a9-5ad927cf5b26"}]}, {"operation": {"operationId": "0759dede-2cee-433c-b314-10a8fa456e62", "operationName": "min", "operationFullName": "pandas.DataFrame.min", "inputTypes": [2], "outputType": 2, "outputTypes": [2], "framework": "pandas", "frameworkVersion": "1.3.3", "sectionTitle": "Computations / descriptive stats", "title": "pandas.DataFrame.min", "description": "Return the minimum of the values over the requested axis.", "signature": "DataFrame.min(axis=None, skipna=None, level=None, numeric_only=None)", "signatureName": "min", "returnsDescription": "", "sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.3.3/pandas/core/generic.py#L10823-L10836", "defaultConfig": {"axis": "None", "skipna": "None", "level": "None", "numeric_only": "None"}, "returns": "Series or DataFrame (if level specified)"}, "input_datasets": [{'type': 2, "id": "6a8cd1ce-b392-4015-913b-b74ac7121ca8"}]}, {"operation": {"operationId": "0759dede-2cee-433c-b314-10a8fa456e62", "operationName": "pivot_table", "operationFullName": "pandas.DataFrame.pivot_table", "inputTypes": [2], "outputType": 2, "outputTypes": [2], "framework": "pandas", "frameworkVersion": "1.3.3", "sectionTitle": "Reshaping, sorting, transposing", "title": "pandas.DataFrame.pivot_table", "description": "Create a spreadsheet-style pivot table as a DataFrame.", "signature": "DataFrame.pivot_table(values=None, index=None, columns=None, aggfunc='mean', fill_value=None, margins=False, dropna=True, margins_name='All', observed=False, sort=True)", "signatureName": "pivot_table", "returnsDescription": "An Excel style pivot table.", "sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.3.3/pandas/core/frame.py#L7934-L7963", "defaultConfig": {"values": "None", "index": "None", "columns": "None", "aggfunc": "mean", "fill_value": "None", "margins": "False", "dropna": "True", "margins_name": "All", "observed": "False", "sort": "True"}, "returns": "DataFrame"}, "input_datasets": [{'type': 2, "id": "ec9fc8a3-c95b-4272-aa88-bbc50e33ad3f"}]}, {"operation": {"operationId": "0759dede-2cee-433c-b314-10a8fa456e62", "operationName": "cummin", "operationFullName": "pandas.DataFrame.cummin", "inputTypes": [2], "outputType": 2, "outputTypes": [2], "framework": "pandas", "frameworkVersion": "1.3.3", "sectionTitle": "Computations / descriptive stats", "title": "pandas.DataFrame.cummin", "description": "Return cumulative minimum over a DataFrame or Series axis.", "signature": "DataFrame.cummin(axis=None, skipna=True)", "signatureName": "cummin", "returnsDescription": "Return cumulative minimum of Series or DataFrame.", "sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.3.3/pandas/core/generic.py#L10632-L10642", "defaultConfig": {"axis": "None", "skipna": "True"}, "returns": "Series or DataFrame"}, "input_datasets": [{'type': 2, "id": "35876ab5-7df6-4143-aa84-b10c5a9b0413"}]}, {"operation": {"operationId": "0759dede-2cee-433c-b314-10a8fa456e62", "operationName": "isnull", "operationFullName": "pandas.DataFrame.isnull", "inputTypes": [2], "outputType": 2, "outputTypes": [2], "framework": "pandas", "frameworkVersion": "1.3.3", "sectionTitle": "Missing data handling", "title": "pandas.DataFrame.isnull", "description": "Detect missing values.", "signature": "DataFrame.isnull()", "signatureName": "isnull", "returnsDescription": "Mask of bool values for each element in DataFrame that\nindicates whether an element is an NA value.", "sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.3.3/pandas/core/frame.py#L5815-L5817", "defaultConfig": {"": ""}, "returns": "DataFrame"}, "input_datasets": [{"type": 2, "id": "9dfe7b2a-5ae8-45ef-84e6-4d846842f236"}]}, {"operation": {"operationId": "0759dede-2cee-433c-b314-10a8fa456e62", "operationName": "clip", "operationFullName": "pandas.DataFrame.clip", "inputTypes": [2], "outputType": 2, "outputTypes": [2], "framework": "pandas", "frameworkVersion": "1.3.3", "sectionTitle": "Computations / descriptive stats", "title": "pandas.DataFrame.clip", "description": "Trim values at input threshold(s).", "signature": "DataFrame.clip(lower=None, upper=None, axis=None)", "signatureName": "clip", "returnsDescription": "Same type as calling object with the values outside the\nclip boundaries replaced or None if inplace=True.", "sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.3.3/pandas/core/frame.py#L10687-L10699", "defaultConfig": {"lower": "None", "upper": "None", "axis": "None"}, "returns": "Series or DataFrame or None"}, "input_datasets": [{"type": 2, "id": "55dfdc4a-6186-474e-8d4a-c9d960f1c913"}]}, {"operation": {"operationId": "0759dede-2cee-433c-b314-10a8fa456e62", "operationName": "count", "operationFullName": "pandas.DataFrame.count", "inputTypes": [2], "outputType": 2, "outputTypes": [2], "framework": "pandas", "frameworkVersion": "1.3.3", "sectionTitle": "Computations / descriptive stats", "title": "pandas.DataFrame.count", "description": "Count non-NA cells for each column or row.", "signature": "DataFrame.count(axis=0, level=None, numeric_only=False)", "signatureName": "count", "returnsDescription": "For each column/row the number of non-NA/null entries.\nIf level is specified returns a DataFrame.", "sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.3.3/pandas/core/frame.py#L9626-L9728", "defaultConfig": {"axis": "0", "level": "None", "numeric_only": "False"}, "returns": "Series or DataFrame"}, "input_datasets": [{"type": 2, "id": "075c1d2a-9ed9-4f9f-a1d5-f00a5f262f28"}]}, {"operation": {"operationId": "0759dede-2cee-433c-b314-10a8fa456e62", "operationName": "interpolate", "operationFullName": "pandas.DataFrame.interpolate", "inputTypes": [2], "outputType": 2, "outputTypes": [2], "framework": "pandas", "frameworkVersion": "1.3.3", "sectionTitle": "Missing data handling", "title": "pandas.DataFrame.interpolate", "description": "Fill NaN values using an interpolation method.", "signature": "DataFrame.interpolate(method='linear', axis=0, limit=None, limit_direction=None, limit_area=None, downcast=None)", "signatureName": "interpolate", "returnsDescription": "Returns the same object type as the caller, interpolated at\nsome or all NaN values or None if inplace=True.", "sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.3.3/pandas/core/frame.py#L10701-L10722", "defaultConfig": {"method": "linear", "axis": "0", "limit": "None", "limit_direction": "None", "limit_area": "None", "downcast": "None"}, "returns": "Series or DataFrame or None"}, "input_datasets": [{"type": 2, "id": "41e28106-108d-4e93-bd53-2d418827041a"}]}, {"operation": {"operationId": "0759dede-2cee-433c-b314-10a8fa456e62", "operationName": "notna", "operationFullName": "pandas.DataFrame.notna", "inputTypes": [2], "outputType": 2, "outputTypes": [2], "framework": "pandas", "frameworkVersion": "1.3.3", "sectionTitle": "Missing data handling", "title": "pandas.DataFrame.notna", "description": "Detect existing (non-missing) values.", "signature": "DataFrame.notna()", "signatureName": "notna", "returnsDescription": "Mask of bool values for each element in DataFrame that\nindicates whether an element is not an NA value.", "sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.3.3/pandas/core/frame.py#L5819-L5821", "defaultConfig": {"": ""}, "returns": "DataFrame"}, "input_datasets": [{"type": 2, "id": "1713a2a6-d22e-4f13-bd03-c61bbf788111"}]}, {"operation": {"operationId": "24f097f7-08db-4e78-a7dd-b510bfa4852e", "operationName": "classifier_naive_bayes_gaussian", "operationFullName": "sklearn.classifiers.naive.bayes.gaussian", "inputTypes": [2, 1], "outputType": 5, "outputTypes": [5], "framework": "scikit-learn", "frameworkVersion": "1.0.2", "sectionTitle": "SciKit Learn", "title": "sklearn.classifiers.naive.bayes.gaussian", "description": "Creates and fits a Gaussian Naive Bayes Classification model", "signature": null, "signatureName": null, "returnsDescription": null, "sourceUrl": null, "defaultConfig": {"priors": null, "var_smoothing": "1e-9"}, "returns": "GaussianNB"}, "input_datasets": [{"type": 2, "id": "88907d80-e2a3-45e9-a10d-79cbe8e33f06"}, {"type": 1, "id": "f2516796-0898-42c3-98af-b4311a882faf"}]}, {"operation": {"operationId": "0759dede-2cee-433c-b314-10a8fa456e62", "operationName": "cummin", "operationFullName": "pandas.DataFrame.cummin", "inputTypes": [2], "outputType": 2, "outputTypes": [2], "framework": "pandas", "frameworkVersion": "1.3.3", "sectionTitle": "Computations / descriptive stats", "title": "pandas.DataFrame.cummin", "description": "Return cumulative minimum over a DataFrame or Series axis.", "signature": "DataFrame.cummin(axis=None, skipna=True)", "signatureName": "cummin", "returnsDescription": "Return cumulative minimum of Series or DataFrame.", "sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.3.3/pandas/core/generic.py#L10632-L10642", "defaultConfig": {"axis": "None", "skipna": "True"}, "returns": "Series or DataFrame"}, "input_datasets": [{"type": 2, "id": "88907d80-e2a3-45e9-a10d-79cbe8e33f06"}]}, {"operation": {"operationId": "0759dede-2cee-433c-b314-10a8fa456e62", "operationName": "explode", "operationFullName": "pandas.DataFrame.explode", "inputTypes": [2], "outputType": 2, "outputTypes": [2], "framework": "pandas", "frameworkVersion": "1.3.3", "sectionTitle": "Reshaping, sorting, transposing", "title": "pandas.DataFrame.explode", "description": "Transform each element of a list-like to a row, replicating index values.", "signature": "DataFrame.explode(column, ignore_index=False)", "signatureName": "explode", "returnsDescription": "Exploded lists to rows of the subset columns;\nindex will be duplicated for these rows.", "sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.3.3/pandas/core/frame.py#L8138-L8264", "defaultConfig": {"column": "", "ignore_index": "False"}, "returns": "DataFrame"}, "input_datasets": [{"type": 2, "id": "1eabe742-a41d-4408-a325-8bb91d841f23"}]}, {"operation": {"operationId": "93d21ed8-acc5-4a67-8678-93a705a0878b", "operationName": "classifier_decision_tree", "operationFullName": "sklearn.classifiers.decision.tree", "inputTypes": [2, 1], "outputType": 5, "outputTypes": [5], "framework": "scikit-learn", "frameworkVersion": "1.0.2", "sectionTitle": "SciKit Learn", "title": "sklearn.classifiers.decision.tree", "description": "Creates and fits a Decision Tree Classification model", "signature": null, "signatureName": null, "returnsDescription": null, "sourceUrl": null, "defaultConfig": {"criterion": "gini", "max_depth": null, "min_samples_split": "2", "min_samples_leaf": "1", "min_weight_fraction_leaf": "0.0", "max_features": "auto", "max_leaf_nodes": null, "min_impurity_decrease": "0.0", "random_state": null, "class_weight": null, "ccp_alpha": "0.0"}, "returns": "DecisionTree"}, "input_datasets": [{"type": 2, "id": "af938872-d465-49b4-bb5f-a72770d8cd81"}, {"type": 1, "id": "f2516796-0898-42c3-98af-b4311a882faf"}]}, {"operation": {"operationId": "067c7cd4-87f6-43e2-a733-26e5c51ef875", "operationName": "classifier_score", "operationFullName": "sklearn.classifiers.score", "inputTypes": [5, 2, 1], "outputType": 2, "outputTypes": [2], "framework": "scikit-learn", "frameworkVersion": "1.0.2", "sectionTitle": "SciKit Learn", "title": "sklearn.classifiers.score", "description": "Scores a classifier on test data", "signature": null, "signatureName": null, "returnsDescription": null, "sourceUrl": null, "defaultConfig": {}, "returns": "DataFrame"}, "input_datasets": [{"type": 5, "id": "e24aed16-d0a5-4dc9-b1e6-8a7aff62c55a"}, {"type": 2, "id": "af938872-d465-49b4-bb5f-a72770d8cd81"}, {"type": 1, "id": "f2516796-0898-42c3-98af-b4311a882faf"}]}], "pipeline_id": "9e683c72-34f4-4943-ba0c-2901cf6deb43", "started_at": 1652384557, "task_id": 31, "dataset_id": 31, "task_type_id": "TaskType.SUPERVISED_CLASSIFICATION", "batch_number": 6, "completed_at": 1652384708}
