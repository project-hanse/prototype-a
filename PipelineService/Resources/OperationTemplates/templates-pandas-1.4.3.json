[
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "append",
		"operationFullName": "pandas.DataFrame.append",
		"inputTypes": [
			2,
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Combining / comparing / joining / merging",
		"title": "pandas.DataFrame.append",
		"description": "Append rows of other to the end of caller, returning a new object.",
		"signature": "DataFrame.append(other, ignore_index=False, verify_integrity=False, sort=False)",
		"signatureName": "append",
		"returnsDescription": "A new DataFrame consisting of the rows of caller and the rows of other.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L8831-L8972",
		"defaultConfig": {
			"other": "",
			"ignore_index": "False",
			"verify_integrity": "False",
			"sort": "False"
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "compare",
		"operationFullName": "pandas.DataFrame.compare",
		"inputTypes": [
			2,
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Combining / comparing / joining / merging",
		"title": "pandas.DataFrame.compare",
		"description": "Compare to another DataFrame and show the differences.",
		"signature": "DataFrame.compare(other, align_axis=1, keep_shape=False, keep_equal=False)",
		"signatureName": "compare",
		"returnsDescription": "DataFrame that shows the differences stacked side by side.\nThe resulting index will be a MultiIndex with 창\u0080\u0098self창\u0080\u0099 and 창\u0080\u0098other창\u0080\u0099\nstacked alternately at the inner level.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L7000-L7118",
		"defaultConfig": {
			"other": "",
			"align_axis": "1",
			"keep_shape": "False",
			"keep_equal": "False"
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "join",
		"operationFullName": "pandas.DataFrame.join",
		"inputTypes": [
			2,
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Combining / comparing / joining / merging",
		"title": "pandas.DataFrame.join",
		"description": "Join columns of another DataFrame.",
		"signature": "DataFrame.join(other, on=None, how='left', lsuffix='', rsuffix='', sort=False)",
		"signatureName": "join",
		"returnsDescription": "A dataframe containing columns from both the caller and other.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L8974-L9102",
		"defaultConfig": {
			"other": "",
			"on": "None",
			"how": "left",
			"lsuffix": "",
			"rsuffix": "",
			"sort": "False"
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "merge",
		"operationFullName": "pandas.DataFrame.merge",
		"inputTypes": [
			2,
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Combining / comparing / joining / merging",
		"title": "pandas.DataFrame.merge",
		"description": "Merge DataFrame or named Series objects with a database-style join.",
		"signature": "DataFrame.merge(right, how='inner', on=None, left_on=None, right_on=None, left_index=False, right_index=False, sort=False, suffixes=('_x', '_y'), copy=True, indicator=False, validate=None)",
		"signatureName": "merge",
		"returnsDescription": "A DataFrame of the two merged objects.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L9172-L9205",
		"defaultConfig": {
			"right": "",
			"how": "inner",
			"on": "None",
			"left_on": "None",
			"right_on": "None",
			"left_index": "False",
			"right_index": "False",
			"sort": "False",
			"suffixes": "(_x",
			"'_y')": "",
			"copy": "True",
			"indicator": "False",
			"validate": "None"
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "all",
		"operationFullName": "pandas.DataFrame.all",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.all",
		"description": "Return whether all elements are True, potentially over an axis.",
		"signature": "DataFrame.all(axis=0, bool_only=None, skipna=True, level=None)",
		"signatureName": "all",
		"returnsDescription": "If level is specified, then, DataFrame is returned; otherwise, Series\nis returned.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L10535-L10546",
		"defaultConfig": {
			"axis": "0",
			"bool_only": "None",
			"skipna": "True",
			"level": "None"
		},
		"returns": "Series or DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "any",
		"operationFullName": "pandas.DataFrame.any",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.any",
		"description": "Return whether any element is True, potentially over an axis.",
		"signature": "DataFrame.any(axis=0, bool_only=None, skipna=True, level=None)",
		"signatureName": "any",
		"returnsDescription": "If level is specified, then, DataFrame is returned; otherwise, Series\nis returned.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L10520-L10531",
		"defaultConfig": {
			"axis": "0",
			"bool_only": "None",
			"skipna": "True",
			"level": "None"
		},
		"returns": "Series or DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "clip",
		"operationFullName": "pandas.DataFrame.clip",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.clip",
		"description": "Trim values at input threshold(s).",
		"signature": "DataFrame.clip(lower=None, upper=None, axis=None)",
		"signatureName": "clip",
		"returnsDescription": "Same type as calling object with the values outside the\nclip boundaries replaced or None if inplace=True.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L10687-L10699",
		"defaultConfig": {
			"lower": "None",
			"upper": "None",
			"axis": "None"
		},
		"returns": "Series or DataFrame or None"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "corr",
		"operationFullName": "pandas.DataFrame.corr",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.corr",
		"description": "Compute pairwise correlation of columns, excluding NA/null values.",
		"signature": "DataFrame.corr(method='pearson', min_periods=1)",
		"signatureName": "corr",
		"returnsDescription": "Correlation matrix.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L9326-L9414",
		"defaultConfig": {
			"method": "pearson",
			"min_periods": "1"
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "count",
		"operationFullName": "pandas.DataFrame.count",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.count",
		"description": "Count non-NA cells for each column or row.",
		"signature": "DataFrame.count(axis=0, level=None, numeric_only=False)",
		"signatureName": "count",
		"returnsDescription": "For each column/row the number of non-NA/null entries.\nIf level is specified returns a DataFrame.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L9626-L9728",
		"defaultConfig": {
			"axis": "0",
			"level": "None",
			"numeric_only": "False"
		},
		"returns": "Series or DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "cov",
		"operationFullName": "pandas.DataFrame.cov",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.cov",
		"description": "Compute pairwise covariance of columns, excluding NA/null values.",
		"signature": "DataFrame.cov(min_periods=None, ddof=1)",
		"signatureName": "cov",
		"returnsDescription": "The covariance matrix of the series of the DataFrame.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L9416-L9530",
		"defaultConfig": {
			"min_periods": "None",
			"ddof": "1"
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "cummax",
		"operationFullName": "pandas.DataFrame.cummax",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.cummax",
		"description": "Return cumulative maximum over a DataFrame or Series axis.",
		"signature": "DataFrame.cummax(axis=None, skipna=True)",
		"signatureName": "cummax",
		"returnsDescription": "Return cumulative maximum of Series or DataFrame.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L10646-L10656",
		"defaultConfig": {
			"axis": "None",
			"skipna": "True"
		},
		"returns": "Series or DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "cummin",
		"operationFullName": "pandas.DataFrame.cummin",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.cummin",
		"description": "Return cumulative minimum over a DataFrame or Series axis.",
		"signature": "DataFrame.cummin(axis=None, skipna=True)",
		"signatureName": "cummin",
		"returnsDescription": "Return cumulative minimum of Series or DataFrame.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L10632-L10642",
		"defaultConfig": {
			"axis": "None",
			"skipna": "True"
		},
		"returns": "Series or DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "cumprod",
		"operationFullName": "pandas.DataFrame.cumprod",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.cumprod",
		"description": "Return cumulative product over a DataFrame or Series axis.",
		"signature": "DataFrame.cumprod(axis=None, skipna=True)",
		"signatureName": "cumprod",
		"returnsDescription": "Return cumulative product of Series or DataFrame.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L10674-L10684",
		"defaultConfig": {
			"axis": "None",
			"skipna": "True"
		},
		"returns": "Series or DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "cumsum",
		"operationFullName": "pandas.DataFrame.cumsum",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.cumsum",
		"description": "Return cumulative sum over a DataFrame or Series axis.",
		"signature": "DataFrame.cumsum(axis=None, skipna=True)",
		"signatureName": "cumsum",
		"returnsDescription": "Return cumulative sum of Series or DataFrame.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L10660-L10670",
		"defaultConfig": {
			"axis": "None",
			"skipna": "True"
		},
		"returns": "Series or DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "describe",
		"operationFullName": "pandas.DataFrame.describe",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.describe",
		"description": "Generate descriptive statistics.",
		"signature": "DataFrame.describe(percentiles=None, include=None, exclude=None, datetime_is_numeric=False)",
		"signatureName": "describe",
		"returnsDescription": "Summary statistics of the Series or Dataframe provided.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L9775-L10030",
		"defaultConfig": {
			"percentiles": "None",
			"include": "None",
			"exclude": "None",
			"datetime_is_numeric": "False"
		},
		"returns": "Series or DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "kurt",
		"operationFullName": "pandas.DataFrame.kurt",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.kurt",
		"description": "Return unbiased kurtosis over requested axis.",
		"signature": "DataFrame.kurt(axis=None, skipna=None, level=None, numeric_only=None)",
		"signatureName": "kurt",
		"returnsDescription": "",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L10770-L10784",
		"defaultConfig": {
			"axis": "None",
			"skipna": "None",
			"level": "None",
			"numeric_only": "None"
		},
		"returns": "Series or DataFrame (if level specified)"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "kurtosis",
		"operationFullName": "pandas.DataFrame.kurtosis",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.kurtosis",
		"description": "Return unbiased kurtosis over requested axis.",
		"signature": "DataFrame.kurtosis(axis=None, skipna=None, level=None, numeric_only=None)",
		"signatureName": "kurtosis",
		"returnsDescription": "",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L10770-L10784",
		"defaultConfig": {
			"axis": "None",
			"skipna": "None",
			"level": "None",
			"numeric_only": "None"
		},
		"returns": "Series or DataFrame (if level specified)"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "mad",
		"operationFullName": "pandas.DataFrame.mad",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.mad",
		"description": "Return the mean absolute deviation of the values over the requested axis.",
		"signature": "DataFrame.mad(axis=None, skipna=None, level=None)",
		"signatureName": "mad",
		"returnsDescription": "",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L10552-L10563",
		"defaultConfig": {
			"axis": "None",
			"skipna": "None",
			"level": "None"
		},
		"returns": "Series or DataFrame (if level specified)"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "max",
		"operationFullName": "pandas.DataFrame.max",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.max",
		"description": "Return the maximum of the values over the requested axis.",
		"signature": "DataFrame.max(axis=None, skipna=None, level=None, numeric_only=None)",
		"signatureName": "max",
		"returnsDescription": "",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L10806-L10819",
		"defaultConfig": {
			"axis": "None",
			"skipna": "None",
			"level": "None",
			"numeric_only": "None"
		},
		"returns": "Series or DataFrame (if level specified)"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "mean",
		"operationFullName": "pandas.DataFrame.mean",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.mean",
		"description": "Return the mean of the values over the requested axis.",
		"signature": "DataFrame.mean(axis=None, skipna=None, level=None, numeric_only=None)",
		"signatureName": "mean",
		"returnsDescription": "",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L10740-L10751",
		"defaultConfig": {
			"axis": "None",
			"skipna": "None",
			"level": "None",
			"numeric_only": "None"
		},
		"returns": "Series or DataFrame (if level specified)"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "median",
		"operationFullName": "pandas.DataFrame.median",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.median",
		"description": "Return the median of the values over the requested axis.",
		"signature": "DataFrame.median(axis=None, skipna=None, level=None, numeric_only=None)",
		"signatureName": "median",
		"returnsDescription": "",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L10789-L10802",
		"defaultConfig": {
			"axis": "None",
			"skipna": "None",
			"level": "None",
			"numeric_only": "None"
		},
		"returns": "Series or DataFrame (if level specified)"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "min",
		"operationFullName": "pandas.DataFrame.min",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.min",
		"description": "Return the minimum of the values over the requested axis.",
		"signature": "DataFrame.min(axis=None, skipna=None, level=None, numeric_only=None)",
		"signatureName": "min",
		"returnsDescription": "",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L10823-L10836",
		"defaultConfig": {
			"axis": "None",
			"skipna": "None",
			"level": "None",
			"numeric_only": "None"
		},
		"returns": "Series or DataFrame (if level specified)"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "mode",
		"operationFullName": "pandas.DataFrame.mode",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.mode",
		"description": "Get the mode(s) of each element along the selected axis.",
		"signature": "DataFrame.mode(axis=0, numeric_only=False, dropna=True)",
		"signatureName": "mode",
		"returnsDescription": "The modes of each column or row.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L10126-L10216",
		"defaultConfig": {
			"axis": "0",
			"numeric_only": "False",
			"dropna": "True"
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "pct_change",
		"operationFullName": "pandas.DataFrame.pct_change",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.pct_change",
		"description": "Percentage change between the current and a prior element.",
		"signature": "DataFrame.pct_change(periods=1, fill_method='pad', limit=None, freq=None)",
		"signatureName": "pct_change",
		"returnsDescription": "The same type as the calling object.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L10032-L10171",
		"defaultConfig": {
			"periods": "1",
			"fill_method": "pad",
			"limit": "None",
			"freq": "None"
		},
		"returns": "chgSeries or DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "prod",
		"operationFullName": "pandas.DataFrame.prod",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.prod",
		"description": "Return the product of the values over the requested axis.",
		"signature": "DataFrame.prod(axis=None, skipna=None, level=None, numeric_only=None, min_count=0)",
		"signatureName": "prod",
		"returnsDescription": "",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L10714-L10735",
		"defaultConfig": {
			"axis": "None",
			"skipna": "None",
			"level": "None",
			"numeric_only": "None",
			"min_count": "0"
		},
		"returns": "Series or DataFrame (if level specified)"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "product",
		"operationFullName": "pandas.DataFrame.product",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.product",
		"description": "Return the product of the values over the requested axis.",
		"signature": "DataFrame.product(axis=None, skipna=None, level=None, numeric_only=None, min_count=0)",
		"signatureName": "product",
		"returnsDescription": "",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L10714-L10735",
		"defaultConfig": {
			"axis": "None",
			"skipna": "None",
			"level": "None",
			"numeric_only": "None",
			"min_count": "0"
		},
		"returns": "Series or DataFrame (if level specified)"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "quantile",
		"operationFullName": "pandas.DataFrame.quantile",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.quantile",
		"description": "Return values at the given quantile over requested axis.",
		"signature": "DataFrame.quantile(q=0.5, axis=0, numeric_only=True, interpolation='linear')",
		"signatureName": "quantile",
		"returnsDescription": "If q is an array, a DataFrame will be returned where theindex is q, the columns are the columns of self, and the\nvalues are the quantiles.\n\nIf q is a float, a Series will be returned where theindex is the columns of self and the values are the quantiles.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L10218-L10316",
		"defaultConfig": {
			"q": "0.5",
			"axis": "0",
			"numeric_only": "True",
			"interpolation": "linear"
		},
		"returns": "Series or DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "round",
		"operationFullName": "pandas.DataFrame.round",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.round",
		"description": "Round a DataFrame to a variable number of decimal places.",
		"signature": "DataFrame.round(decimals=0)",
		"signatureName": "round",
		"returnsDescription": "A DataFrame with the affected columns rounded to the specified\nnumber of decimal places.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L9207-L9321",
		"defaultConfig": {
			"decimals": "0"
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "sem",
		"operationFullName": "pandas.DataFrame.sem",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.sem",
		"description": "Return unbiased standard error of the mean over requested axis.",
		"signature": "DataFrame.sem(axis=None, skipna=None, level=None, ddof=1, numeric_only=None)",
		"signatureName": "sem",
		"returnsDescription": "",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L10567-L10585",
		"defaultConfig": {
			"axis": "None",
			"skipna": "None",
			"level": "None",
			"ddof": "1",
			"numeric_only": "None"
		},
		"returns": "Series or DataFrame (if level specified)"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "skew",
		"operationFullName": "pandas.DataFrame.skew",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.skew",
		"description": "Return unbiased skew over requested axis.",
		"signature": "DataFrame.skew(axis=None, skipna=None, level=None, numeric_only=None)",
		"signatureName": "skew",
		"returnsDescription": "",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L10755-L10766",
		"defaultConfig": {
			"axis": "None",
			"skipna": "None",
			"level": "None",
			"numeric_only": "None"
		},
		"returns": "Series or DataFrame (if level specified)"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "std",
		"operationFullName": "pandas.DataFrame.std",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.std",
		"description": "Return sample standard deviation over requested axis.",
		"signature": "DataFrame.std(axis=None, skipna=None, level=None, ddof=1, numeric_only=None)",
		"signatureName": "std",
		"returnsDescription": "",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L10610-L10628",
		"defaultConfig": {
			"axis": "None",
			"skipna": "None",
			"level": "None",
			"ddof": "1",
			"numeric_only": "None"
		},
		"returns": "Series or DataFrame (if level specified)"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "sum",
		"operationFullName": "pandas.DataFrame.sum",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.sum",
		"description": "Return the sum of the values over the requested axis.",
		"signature": "DataFrame.sum(axis=None, skipna=None, level=None, numeric_only=None, min_count=0)",
		"signatureName": "sum",
		"returnsDescription": "",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L10688-L10710",
		"defaultConfig": {
			"axis": "None",
			"skipna": "None",
			"level": "None",
			"numeric_only": "None",
			"min_count": "0"
		},
		"returns": "Series or DataFrame (if level specified)"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "var",
		"operationFullName": "pandas.DataFrame.var",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Computations / descriptive stats",
		"title": "pandas.DataFrame.var",
		"description": "Return unbiased variance over requested axis.",
		"signature": "DataFrame.var(axis=None, skipna=None, level=None, ddof=1, numeric_only=None)",
		"signatureName": "var",
		"returnsDescription": "",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L10589-L10606",
		"defaultConfig": {
			"axis": "None",
			"skipna": "None",
			"level": "None",
			"ddof": "1",
			"numeric_only": "None"
		},
		"returns": "Series or DataFrame (if level specified)"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "convert_dtypes",
		"operationFullName": "pandas.DataFrame.convert_dtypes",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Conversion",
		"title": "pandas.DataFrame.convert_dtypes",
		"description": "Convert columns to best possible dtypes using dtypes supporting pd.NA.",
		"signature": "DataFrame.convert_dtypes(infer_objects=True, convert_string=True, convert_integer=True, convert_boolean=True, convert_floating=True)",
		"signatureName": "convert_dtypes",
		"returnsDescription": "Copy of input object with new dtype.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L6033-L6190",
		"defaultConfig": {
			"infer_objects": "True",
			"convert_string": "True",
			"convert_integer": "True",
			"convert_boolean": "True",
			"convert_floating": "True"
		},
		"returns": "Series or DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "copy",
		"operationFullName": "pandas.DataFrame.copy",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Conversion",
		"title": "pandas.DataFrame.copy",
		"description": "Make a copy of this object창\u0080\u0099s indices and data.",
		"signature": "DataFrame.copy(deep=True)",
		"signatureName": "copy",
		"returnsDescription": "Object type matches caller.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L5827-L5935",
		"defaultConfig": {
			"deep": "True"
		},
		"returns": "copySeries or DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "agg",
		"operationFullName": "pandas.DataFrame.agg",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Function application, GroupBy & window",
		"title": "pandas.DataFrame.agg",
		"description": "Aggregate using one or more operations over the specified axis.",
		"signature": "DataFrame.agg(func=None, axis=0)",
		"signatureName": "agg",
		"returnsDescription": "The return can be:\n\nscalar : when Series.agg is called with single function\nSeries : when DataFrame.agg is called with a single function\nDataFrame : when DataFrame.agg is called with several functions\n\nReturn scalar, Series or DataFrame.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L8536-L8565",
		"defaultConfig": {
			"func": "None",
			"axis": "0"
		},
		"returns": "scalar, Series or DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "aggregate",
		"operationFullName": "pandas.DataFrame.aggregate",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Function application, GroupBy & window",
		"title": "pandas.DataFrame.aggregate",
		"description": "Aggregate using one or more operations over the specified axis.",
		"signature": "DataFrame.aggregate(func=None, axis=0)",
		"signatureName": "aggregate",
		"returnsDescription": "The return can be:\n\nscalar : when Series.agg is called with single function\nSeries : when DataFrame.agg is called with a single function\nDataFrame : when DataFrame.agg is called with several functions\n\nReturn scalar, Series or DataFrame.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L8536-L8565",
		"defaultConfig": {
			"func": "None",
			"axis": "0"
		},
		"returns": "scalar, Series or DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "apply",
		"operationFullName": "pandas.DataFrame.apply",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Function application, GroupBy & window",
		"title": "pandas.DataFrame.apply",
		"description": "Apply a function along an axis of the DataFrame.",
		"signature": "DataFrame.apply(func, axis=0, raw=False, result_type=None, args=())",
		"signatureName": "apply",
		"returnsDescription": "Result of applying func along the given axis of the\nDataFrame.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L8584-L8741",
		"defaultConfig": {
			"func": "",
			"axis": "0",
			"raw": "False",
			"result_type": "None",
			"args": "()"
		},
		"returns": "Series or DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "applymap",
		"operationFullName": "pandas.DataFrame.applymap",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Function application, GroupBy & window",
		"title": "pandas.DataFrame.applymap",
		"description": "Apply a function to a Dataframe elementwise.",
		"signature": "DataFrame.applymap(func, na_action=None)",
		"signatureName": "applymap",
		"returnsDescription": "Transformed DataFrame.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L8743-L8826",
		"defaultConfig": {
			"func": "",
			"na_action": "None"
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "ewm",
		"operationFullName": "pandas.DataFrame.ewm",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Function application, GroupBy & window",
		"title": "pandas.DataFrame.ewm",
		"description": "Provide exponential weighted (EW) functions.",
		"signature": "DataFrame.ewm(com=None, span=None, halflife=None, alpha=None, min_periods=0, adjust=True, ignore_na=False, axis=0, times=None)",
		"signatureName": "ewm",
		"returnsDescription": "A Window sub-classed for the particular operation.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L10903-L10931",
		"defaultConfig": {
			"com": "None",
			"span": "None",
			"halflife": "None",
			"alpha": "None",
			"min_periods": "0",
			"adjust": "True",
			"ignore_na": "False",
			"axis": "0",
			"times": "None"
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "groupby",
		"operationFullName": "pandas.DataFrame.groupby",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Function application, GroupBy & window",
		"title": "pandas.DataFrame.groupby",
		"description": "Group DataFrame using a mapper or by a Series of columns.",
		"signature": "DataFrame.groupby(by=None, axis=0, level=None, as_index=True, sort=True, group_keys=True, squeeze=NoDefault.no_default, observed=False, dropna=True)",
		"signatureName": "groupby",
		"returnsDescription": "Returns a groupby object that contains information about the groups.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L7515-L7642",
		"defaultConfig": {
			"by": "None",
			"axis": "0",
			"level": "None",
			"as_index": "True",
			"sort": "True",
			"group_keys": "True",
			"squeeze": "NoDefault.no_default",
			"observed": "False",
			"dropna": "True"
		},
		"returns": "DataFrameGroupBy"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "transform",
		"operationFullName": "pandas.DataFrame.transform",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Function application, GroupBy & window",
		"title": "pandas.DataFrame.transform",
		"description": "Call func on self producing a DataFrame with transformed values.",
		"signature": "DataFrame.transform(func, axis=0)",
		"signatureName": "transform",
		"returnsDescription": "A DataFrame that must have the same length as self.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L8569-L8582",
		"defaultConfig": {
			"func": "",
			"axis": "0"
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "isin",
		"operationFullName": "pandas.DataFrame.isin",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Indexing, iteration",
		"title": "pandas.DataFrame.isin",
		"description": "Whether each element in the DataFrame is contained in values.",
		"signature": "DataFrame.isin(values)",
		"signatureName": "isin",
		"returnsDescription": "DataFrame of booleans showing whether each element in the DataFrame\nis contained in values.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L10438-L10530",
		"defaultConfig": {
			"values": ""
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "query",
		"operationFullName": "pandas.DataFrame.query",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Indexing, iteration",
		"title": "pandas.DataFrame.query",
		"description": "Query the columns of a DataFrame with a boolean expression.",
		"signature": "DataFrame.query(expr)",
		"signatureName": "query",
		"returnsDescription": "DataFrame resulting from the provided query expression or\nNone if inplace=True.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L3910-L4073",
		"defaultConfig": {
			"expr": ""
		},
		"returns": "DataFrame or None"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "xs",
		"operationFullName": "pandas.DataFrame.xs",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Indexing, iteration",
		"title": "pandas.DataFrame.xs",
		"description": "Return cross-section from the Series/DataFrame.",
		"signature": "DataFrame.xs(key, axis=0, level=None, drop_level=True)",
		"signatureName": "xs",
		"returnsDescription": "Cross-section from the original Series or DataFrame\ncorresponding to the selected index levels.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L3634-L3815",
		"defaultConfig": {
			"key": "",
			"axis": "0",
			"level": "None",
			"drop_level": "True"
		},
		"returns": "Series or DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "backfill",
		"operationFullName": "pandas.DataFrame.backfill",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Missing data handling",
		"title": "pandas.DataFrame.backfill",
		"description": "Synonym for DataFrame.fillna() with method='bfill'.",
		"signature": "DataFrame.backfill(axis=None, limit=None, downcast=None)",
		"signatureName": "backfill",
		"returnsDescription": "Object with missing values filled or None if inplace=True.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L6418-L6436",
		"defaultConfig": {
			"axis": "None",
			"limit": "None",
			"downcast": "None"
		},
		"returns": "Series/DataFrame or None"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "bfill",
		"operationFullName": "pandas.DataFrame.bfill",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Missing data handling",
		"title": "pandas.DataFrame.bfill",
		"description": "Synonym for DataFrame.fillna() with method='bfill'.",
		"signature": "DataFrame.bfill(axis=None, limit=None, downcast=None)",
		"signatureName": "bfill",
		"returnsDescription": "Object with missing values filled or None if inplace=True.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L10677-L10685",
		"defaultConfig": {
			"axis": "None",
			"limit": "None",
			"downcast": "None"
		},
		"returns": "Series/DataFrame or None"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "dropna",
		"operationFullName": "pandas.DataFrame.dropna",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Missing data handling",
		"title": "pandas.DataFrame.dropna",
		"description": "Remove missing values.",
		"signature": "DataFrame.dropna(axis=0, how='any', thresh=None, subset=None)",
		"signatureName": "dropna",
		"returnsDescription": "DataFrame with NA entries dropped from it or None if inplace=True.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L5827-L5975",
		"defaultConfig": {
			"axis": "0",
			"how": "any",
			"thresh": "None",
			"subset": "None"
		},
		"returns": "DataFrame or None"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "ffill",
		"operationFullName": "pandas.DataFrame.ffill",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Missing data handling",
		"title": "pandas.DataFrame.ffill",
		"description": "Synonym for DataFrame.fillna() with method='ffill'.",
		"signature": "DataFrame.ffill(axis=None, limit=None, downcast=None)",
		"signatureName": "ffill",
		"returnsDescription": "Object with missing values filled or None if inplace=True.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L10667-L10675",
		"defaultConfig": {
			"axis": "None",
			"limit": "None",
			"downcast": "None"
		},
		"returns": "Series/DataFrame or None"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "fillna",
		"operationFullName": "pandas.DataFrame.fillna",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Missing data handling",
		"title": "pandas.DataFrame.fillna",
		"description": "Fill NA/NaN values using the specified method.",
		"signature": "DataFrame.fillna(value=None, method=None, axis=None, limit=None, downcast=None)",
		"signatureName": "fillna",
		"returnsDescription": "Object with missing values filled or None if inplace=True.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L5165-L5183",
		"defaultConfig": {
			"value": "None",
			"method": "None",
			"axis": "None",
			"limit": "None",
			"downcast": "None"
		},
		"returns": "DataFrame or None"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "interpolate",
		"operationFullName": "pandas.DataFrame.interpolate",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Missing data handling",
		"title": "pandas.DataFrame.interpolate",
		"description": "Fill NaN values using an interpolation method.",
		"signature": "DataFrame.interpolate(method='linear', axis=0, limit=None, limit_direction=None, limit_area=None, downcast=None)",
		"signatureName": "interpolate",
		"returnsDescription": "Returns the same object type as the caller, interpolated at\nsome or all NaN values or None if inplace=True.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L10701-L10722",
		"defaultConfig": {
			"method": "linear",
			"axis": "0",
			"limit": "None",
			"limit_direction": "None",
			"limit_area": "None",
			"downcast": "None"
		},
		"returns": "Series or DataFrame or None"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "isna",
		"operationFullName": "pandas.DataFrame.isna",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Missing data handling",
		"title": "pandas.DataFrame.isna",
		"description": "Detect missing values.",
		"signature": "DataFrame.isna()",
		"signatureName": "isna",
		"returnsDescription": "Mask of bool values for each element in DataFrame that\nindicates whether an element is an NA value.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L5810-L5813",
		"defaultConfig": {
			"": ""
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "isnull",
		"operationFullName": "pandas.DataFrame.isnull",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Missing data handling",
		"title": "pandas.DataFrame.isnull",
		"description": "Detect missing values.",
		"signature": "DataFrame.isnull()",
		"signatureName": "isnull",
		"returnsDescription": "Mask of bool values for each element in DataFrame that\nindicates whether an element is an NA value.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L5815-L5817",
		"defaultConfig": {
			"": ""
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "notna",
		"operationFullName": "pandas.DataFrame.notna",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Missing data handling",
		"title": "pandas.DataFrame.notna",
		"description": "Detect existing (non-missing) values.",
		"signature": "DataFrame.notna()",
		"signatureName": "notna",
		"returnsDescription": "Mask of bool values for each element in DataFrame that\nindicates whether an element is not an NA value.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L5819-L5821",
		"defaultConfig": {
			"": ""
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "notnull",
		"operationFullName": "pandas.DataFrame.notnull",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Missing data handling",
		"title": "pandas.DataFrame.notnull",
		"description": "Detect existing (non-missing) values.",
		"signature": "DataFrame.notnull()",
		"signatureName": "notnull",
		"returnsDescription": "Mask of bool values for each element in DataFrame that\nindicates whether an element is not an NA value.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L5823-L5825",
		"defaultConfig": {
			"": ""
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "pad",
		"operationFullName": "pandas.DataFrame.pad",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Missing data handling",
		"title": "pandas.DataFrame.pad",
		"description": "Synonym for DataFrame.fillna() with method='ffill'.",
		"signature": "DataFrame.pad(axis=None, limit=None, downcast=None)",
		"signatureName": "pad",
		"returnsDescription": "Object with missing values filled or None if inplace=True.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L6396-L6414",
		"defaultConfig": {
			"axis": "None",
			"limit": "None",
			"downcast": "None"
		},
		"returns": "Series/DataFrame or None"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "replace",
		"operationFullName": "pandas.DataFrame.replace",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Missing data handling",
		"title": "pandas.DataFrame.replace",
		"description": "Replace values given in to_replace with value.",
		"signature": "DataFrame.replace(to_replace=None, value=None, limit=None, regex=False, method='pad')",
		"signatureName": "replace",
		"returnsDescription": "Object after replacement.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L5228-L5245",
		"defaultConfig": {
			"to_replace": "None",
			"value": "None",
			"limit": "None",
			"regex": "False",
			"method": "pad"
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "add_prefix",
		"operationFullName": "pandas.DataFrame.add_prefix",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reindexing / selection / label manipulation",
		"title": "pandas.DataFrame.add_prefix",
		"description": "Prefix labels with string prefix.",
		"signature": "DataFrame.add_prefix(prefix)",
		"signatureName": "add_prefix",
		"returnsDescription": "New Series or DataFrame with updated labels.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L4241-L4303",
		"defaultConfig": {
			"prefix": ""
		},
		"returns": "Series or DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "add_suffix",
		"operationFullName": "pandas.DataFrame.add_suffix",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reindexing / selection / label manipulation",
		"title": "pandas.DataFrame.add_suffix",
		"description": "Suffix labels with string suffix.",
		"signature": "DataFrame.add_suffix(suffix)",
		"signatureName": "add_suffix",
		"returnsDescription": "New Series or DataFrame with updated labels.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L4305-L4367",
		"defaultConfig": {
			"suffix": ""
		},
		"returns": "Series or DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "align",
		"operationFullName": "pandas.DataFrame.align",
		"inputTypes": [
			2,
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reindexing / selection / label manipulation",
		"title": "pandas.DataFrame.align",
		"description": "Align two objects on their axes with the specified join method.",
		"signature": "DataFrame.align(other, join='outer', axis=None, level=None, copy=True, fill_value=None, method=None, limit=None, fill_axis=0, broadcast_axis=None)",
		"signatureName": "align",
		"returnsDescription": "Aligned objects.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L4663-L4688",
		"defaultConfig": {
			"other": "",
			"join": "outer",
			"axis": "None",
			"level": "None",
			"copy": "True",
			"fill_value": "None",
			"method": "None",
			"limit": "None",
			"fill_axis": "0",
			"broadcast_axis": "None"
		},
		"returns": "(left, right)(DataFrame, type of other)"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "at_time",
		"operationFullName": "pandas.DataFrame.at_time",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reindexing / selection / label manipulation",
		"title": "pandas.DataFrame.at_time",
		"description": "Select values at particular time of day (e.g., 9:30AM).",
		"signature": "DataFrame.at_time(time, asof=False, axis=None)",
		"signatureName": "at_time",
		"returnsDescription": "",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L7571-L7626",
		"defaultConfig": {
			"time": "",
			"asof": "False",
			"axis": "None"
		},
		"returns": "Series or DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "between_time",
		"operationFullName": "pandas.DataFrame.between_time",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reindexing / selection / label manipulation",
		"title": "pandas.DataFrame.between_time",
		"description": "Select values between particular times of the day (e.g., 9:00-9:30 AM).",
		"signature": "DataFrame.between_time(start_time, end_time, include_start=True, include_end=True, axis=None)",
		"signatureName": "between_time",
		"returnsDescription": "Data from the original object filtered to the specified dates range.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L7628-L7709",
		"defaultConfig": {
			"start_time": "",
			"end_time": "",
			"include_start": "True",
			"include_end": "True",
			"axis": "None"
		},
		"returns": "Series or DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "drop",
		"operationFullName": "pandas.DataFrame.drop",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reindexing / selection / label manipulation",
		"title": "pandas.DataFrame.drop",
		"description": "Drop specified labels from rows or columns.",
		"signature": "DataFrame.drop(labels=None, axis=0, index=None, columns=None, level=None, errors='raise')",
		"signatureName": "drop",
		"returnsDescription": "DataFrame without the removed index or column labels or\nNone if inplace=True.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L4774-L4914",
		"defaultConfig": {
			"labels": "None",
			"axis": "0",
			"index": "None",
			"columns": "None",
			"level": "None",
			"errors": "raise"
		},
		"returns": "DataFrame or None"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "drop_duplicates",
		"operationFullName": "pandas.DataFrame.drop_duplicates",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reindexing / selection / label manipulation",
		"title": "pandas.DataFrame.drop_duplicates",
		"description": "Return DataFrame with duplicate rows removed.",
		"signature": "DataFrame.drop_duplicates(subset=None, keep='first', ignore_index=False)",
		"signatureName": "drop_duplicates",
		"returnsDescription": "DataFrame with duplicates removed or None if inplace=True.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L5977-L6073",
		"defaultConfig": {
			"subset": "None",
			"keep": "first",
			"ignore_index": "False"
		},
		"returns": "DataFrame or None"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "first",
		"operationFullName": "pandas.DataFrame.first",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reindexing / selection / label manipulation",
		"title": "pandas.DataFrame.first",
		"description": "Select initial periods of time series data based on a date offset.",
		"signature": "DataFrame.first(offset)",
		"signatureName": "first",
		"returnsDescription": "A subset of the caller.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L8142-L8213",
		"defaultConfig": {
			"offset": ""
		},
		"returns": "Series or DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "last",
		"operationFullName": "pandas.DataFrame.last",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reindexing / selection / label manipulation",
		"title": "pandas.DataFrame.last",
		"description": "Select final periods of time series data based on a date offset.",
		"signature": "DataFrame.last(offset)",
		"signatureName": "last",
		"returnsDescription": "A subset of the caller.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L8215-L8278",
		"defaultConfig": {
			"offset": ""
		},
		"returns": "Series or DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "reindex",
		"operationFullName": "pandas.DataFrame.reindex",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reindexing / selection / label manipulation",
		"title": "pandas.DataFrame.reindex",
		"description": "Conform Series/DataFrame to new index with optional filling logic.",
		"signature": "DataFrame.reindex(labels=None, index=None, columns=None, axis=None, method=None, copy=True, level=None, fill_value=nan, limit=None, tolerance=None)",
		"signatureName": "reindex",
		"returnsDescription": "",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L4753-L4772",
		"defaultConfig": {
			"labels": "None",
			"index": "None",
			"columns": "None",
			"axis": "None",
			"method": "None",
			"copy": "True",
			"level": "None",
			"fill_value": "nan",
			"limit": "None",
			"tolerance": "None"
		},
		"returns": "Series/DataFrame with changed index."
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "reindex_like",
		"operationFullName": "pandas.DataFrame.reindex_like",
		"inputTypes": [
			2,
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reindexing / selection / label manipulation",
		"title": "pandas.DataFrame.reindex_like",
		"description": "Return an object with matching indices as other object.",
		"signature": "DataFrame.reindex_like(other, method=None, copy=True, limit=None, tolerance=None)",
		"signatureName": "reindex_like",
		"returnsDescription": "Same type as caller, but with changed indices on each axis.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L4009-L4119",
		"defaultConfig": {
			"other": "",
			"method": "None",
			"copy": "True",
			"limit": "None",
			"tolerance": "None"
		},
		"returns": "Series or DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "rename",
		"operationFullName": "pandas.DataFrame.rename",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reindexing / selection / label manipulation",
		"title": "pandas.DataFrame.rename",
		"description": "Alter axes labels.",
		"signature": "DataFrame.rename(mapper=None, index=None, columns=None, axis=None, copy=True, level=None, errors='ignore')",
		"signatureName": "rename",
		"returnsDescription": "DataFrame with the renamed axis labels or None if inplace=True.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L4916-L5048",
		"defaultConfig": {
			"mapper": "None",
			"index": "None",
			"columns": "None",
			"axis": "None",
			"copy": "True",
			"level": "None",
			"errors": "ignore"
		},
		"returns": "DataFrame or None"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "rename_axis",
		"operationFullName": "pandas.DataFrame.rename_axis",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reindexing / selection / label manipulation",
		"title": "pandas.DataFrame.rename_axis",
		"description": "Set the name of the axis for the index or columns.",
		"signature": "DataFrame.rename_axis(mapper=None, index=None, columns=None, axis=None, copy=True)",
		"signatureName": "rename_axis",
		"returnsDescription": "The same type as the caller or None if inplace=True.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L1166-L1335",
		"defaultConfig": {
			"mapper": "None",
			"index": "None",
			"columns": "None",
			"axis": "None",
			"copy": "True"
		},
		"returns": "Series, DataFrame, or None"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "reset_index",
		"operationFullName": "pandas.DataFrame.reset_index",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reindexing / selection / label manipulation",
		"title": "pandas.DataFrame.reset_index",
		"description": "Reset the index, or a level of it.",
		"signature": "DataFrame.reset_index(level=None, drop=False, col_level=0, col_fill='')",
		"signatureName": "reset_index",
		"returnsDescription": "DataFrame with the new index or None if inplace=True.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L5589-L5805",
		"defaultConfig": {
			"level": "None",
			"drop": "False",
			"col_level": "0",
			"col_fill": ""
		},
		"returns": "DataFrame or None"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "sample",
		"operationFullName": "pandas.DataFrame.sample",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reindexing / selection / label manipulation",
		"title": "pandas.DataFrame.sample",
		"description": "Return a random sample of items from an axis of object.",
		"signature": "DataFrame.sample(n=None, frac=None, replace=False, weights=None, random_state=None, axis=None, ignore_index=False)",
		"signatureName": "sample",
		"returnsDescription": "A new object of same type as caller containing n items randomly\nsampled from the caller object.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L5150-L5370",
		"defaultConfig": {
			"n": "None",
			"frac": "None",
			"replace": "False",
			"weights": "None",
			"random_state": "None",
			"axis": "None",
			"ignore_index": "False"
		},
		"returns": "Series or DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "set_axis",
		"operationFullName": "pandas.DataFrame.set_axis",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reindexing / selection / label manipulation",
		"title": "pandas.DataFrame.set_axis",
		"description": "Assign desired index to given axis.",
		"signature": "DataFrame.set_axis(labels, axis=0)",
		"signatureName": "set_axis",
		"returnsDescription": "An object of type DataFrame or None if inplace=True.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L4710-L4751",
		"defaultConfig": {
			"labels": "",
			"axis": "0"
		},
		"returns": "renamedDataFrame or None"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "set_index",
		"operationFullName": "pandas.DataFrame.set_index",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reindexing / selection / label manipulation",
		"title": "pandas.DataFrame.set_index",
		"description": "Set the DataFrame index using existing columns.",
		"signature": "DataFrame.set_index(keys, drop=True, append=False, verify_integrity=False)",
		"signatureName": "set_index",
		"returnsDescription": "Changed row labels or None if inplace=True.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L5322-L5522",
		"defaultConfig": {
			"keys": "",
			"drop": "True",
			"append": "False",
			"verify_integrity": "False"
		},
		"returns": "DataFrame or None"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "droplevel",
		"operationFullName": "pandas.DataFrame.droplevel",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reshaping, sorting, transposing",
		"title": "pandas.DataFrame.droplevel",
		"description": "Return Series/DataFrame with requested index / column level(s) removed.",
		"signature": "DataFrame.droplevel(level, axis=0)",
		"signatureName": "droplevel",
		"returnsDescription": "Series/DataFrame with requested index / column level(s) removed.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L806-L867",
		"defaultConfig": {
			"level": "",
			"axis": "0"
		},
		"returns": "Series/DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "explode",
		"operationFullName": "pandas.DataFrame.explode",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reshaping, sorting, transposing",
		"title": "pandas.DataFrame.explode",
		"description": "Transform each element of a list-like to a row, replicating index values.",
		"signature": "DataFrame.explode(column, ignore_index=False)",
		"signatureName": "explode",
		"returnsDescription": "Exploded lists to rows of the subset columns;\nindex will be duplicated for these rows.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L8138-L8264",
		"defaultConfig": {
			"column": "",
			"ignore_index": "False"
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "melt",
		"operationFullName": "pandas.DataFrame.melt",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reshaping, sorting, transposing",
		"title": "pandas.DataFrame.melt",
		"description": "Unpivot a DataFrame from wide to long format, optionally leaving identifiers set.",
		"signature": "DataFrame.melt(id_vars=None, value_vars=None, var_name=None, value_name='value', col_level=None, ignore_index=True)",
		"signatureName": "melt",
		"returnsDescription": "Unpivoted DataFrame.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L8329-L8348",
		"defaultConfig": {
			"id_vars": "None",
			"value_vars": "None",
			"var_name": "None",
			"value_name": "value",
			"col_level": "None",
			"ignore_index": "True"
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "nlargest",
		"operationFullName": "pandas.DataFrame.nlargest",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reshaping, sorting, transposing",
		"title": "pandas.DataFrame.nlargest",
		"description": "Return the first n rows ordered by columns in descending order.",
		"signature": "DataFrame.nlargest(n, columns, keep='first')",
		"signatureName": "nlargest",
		"returnsDescription": "The first n rows ordered by the given columns in descending\norder.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L6531-L6636",
		"defaultConfig": {
			"n": "",
			"columns": "",
			"keep": "first"
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "nsmallest",
		"operationFullName": "pandas.DataFrame.nsmallest",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reshaping, sorting, transposing",
		"title": "pandas.DataFrame.nsmallest",
		"description": "Return the first n rows ordered by columns in ascending order.",
		"signature": "DataFrame.nsmallest(n, columns, keep='first')",
		"signatureName": "nsmallest",
		"returnsDescription": "",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L6638-L6736",
		"defaultConfig": {
			"n": "",
			"columns": "",
			"keep": "first"
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "pivot",
		"operationFullName": "pandas.DataFrame.pivot",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reshaping, sorting, transposing",
		"title": "pandas.DataFrame.pivot",
		"description": "Return reshaped DataFrame organized by given index / column values.",
		"signature": "DataFrame.pivot(index=None, columns=None, values=None)",
		"signatureName": "pivot",
		"returnsDescription": "Returns reshaped DataFrame.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L7788-L7793",
		"defaultConfig": {
			"index": "None",
			"columns": "None",
			"values": "None"
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "pivot_table",
		"operationFullName": "pandas.DataFrame.pivot_table",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reshaping, sorting, transposing",
		"title": "pandas.DataFrame.pivot_table",
		"description": "Create a spreadsheet-style pivot table as a DataFrame.",
		"signature": "DataFrame.pivot_table(values=None, index=None, columns=None, aggfunc='mean', fill_value=None, margins=False, dropna=True, margins_name='All', observed=False, sort=True)",
		"signatureName": "pivot_table",
		"returnsDescription": "An Excel style pivot table.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L7934-L7963",
		"defaultConfig": {
			"values": "None",
			"index": "None",
			"columns": "None",
			"aggfunc": "mean",
			"fill_value": "None",
			"margins": "False",
			"dropna": "True",
			"margins_name": "All",
			"observed": "False",
			"sort": "True"
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "reorder_levels",
		"operationFullName": "pandas.DataFrame.reorder_levels",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reshaping, sorting, transposing",
		"title": "pandas.DataFrame.reorder_levels",
		"description": "Rearrange index levels using input order. May not drop or duplicate levels.",
		"signature": "DataFrame.reorder_levels(order, axis=0)",
		"signatureName": "reorder_levels",
		"returnsDescription": "",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L6815-L6843",
		"defaultConfig": {
			"order": "",
			"axis": "0"
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "sort_index",
		"operationFullName": "pandas.DataFrame.sort_index",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reshaping, sorting, transposing",
		"title": "pandas.DataFrame.sort_index",
		"description": "Sort object by labels (along an axis).",
		"signature": "DataFrame.sort_index(axis=0, level=None, ascending=True, kind='quicksort', na_position='last', sort_remaining=True, ignore_index=False, key=None)",
		"signatureName": "sort_index",
		"returnsDescription": "The original DataFrame sorted by the labels or None if inplace=True.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L6291-L6403",
		"defaultConfig": {
			"axis": "0",
			"level": "None",
			"ascending": "True",
			"kind": "quicksort",
			"na_position": "last",
			"sort_remaining": "True",
			"ignore_index": "False",
			"key": "None"
		},
		"returns": "DataFrame or None"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "sort_values",
		"operationFullName": "pandas.DataFrame.sort_values",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reshaping, sorting, transposing",
		"title": "pandas.DataFrame.sort_values",
		"description": "Sort by the values along either axis.",
		"signature": "DataFrame.sort_values(by, axis=0, ascending=True, kind='quicksort', na_position='last', ignore_index=False, key=None)",
		"signatureName": "sort_values",
		"returnsDescription": "DataFrame with sorted values or None if inplace=True.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L6216-L6289",
		"defaultConfig": {
			"by": "",
			"axis": "0",
			"ascending": "True",
			"kind": "quicksort",
			"na_position": "last",
			"ignore_index": "False",
			"key": "None"
		},
		"returns": "DataFrame or None"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "squeeze",
		"operationFullName": "pandas.DataFrame.squeeze",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reshaping, sorting, transposing",
		"title": "pandas.DataFrame.squeeze",
		"description": "Squeeze 1 dimensional axis objects into scalars.",
		"signature": "DataFrame.squeeze(axis=None)",
		"signatureName": "squeeze",
		"returnsDescription": "The projection after squeezing axis or all the axes.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L875-L985",
		"defaultConfig": {
			"axis": "None"
		},
		"returns": "DataFrame, Series, or scalar"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "stack",
		"operationFullName": "pandas.DataFrame.stack",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reshaping, sorting, transposing",
		"title": "pandas.DataFrame.stack",
		"description": "Stack the prescribed level(s) from columns to index.",
		"signature": "DataFrame.stack(level=- 1, dropna=True)",
		"signatureName": "stack",
		"returnsDescription": "Stacked dataframe or series.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L7965-L8136",
		"defaultConfig": {
			"level": "- 1",
			"dropna": "True"
		},
		"returns": "DataFrame or Series"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "swaplevel",
		"operationFullName": "pandas.DataFrame.swaplevel",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reshaping, sorting, transposing",
		"title": "pandas.DataFrame.swaplevel",
		"description": "Swap levels i and j in a MultiIndex.",
		"signature": "DataFrame.swaplevel(i=- 2, j=- 1, axis=0)",
		"signatureName": "swaplevel",
		"returnsDescription": "DataFrame with levels swapped in MultiIndex.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L6738-L6813",
		"defaultConfig": {
			"i": "- 2",
			"j": "- 1",
			"axis": "0"
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "transpose",
		"operationFullName": "pandas.DataFrame.transpose",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reshaping, sorting, transposing",
		"title": "pandas.DataFrame.transpose",
		"description": "Transpose index and columns.",
		"signature": "DataFrame.transpose()",
		"signatureName": "transpose",
		"returnsDescription": "The transposed DataFrame.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L3228-L3357",
		"defaultConfig": {},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "unstack",
		"operationFullName": "pandas.DataFrame.unstack",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Reshaping, sorting, transposing",
		"title": "pandas.DataFrame.unstack",
		"description": "Pivot a level of the (necessarily hierarchical) index labels.",
		"signature": "DataFrame.unstack(level=- 1, fill_value=None)",
		"signatureName": "unstack",
		"returnsDescription": "",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L8266-L8327",
		"defaultConfig": {
			"level": "- 1",
			"fill_value": "None"
		},
		"returns": "Series or DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "shift",
		"operationFullName": "pandas.DataFrame.shift",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Time Series-related",
		"title": "pandas.DataFrame.shift",
		"description": "Shift index by desired number of periods with an optional time freq.",
		"signature": "DataFrame.shift(periods=1, freq=None, axis=0, fill_value=NoDefault.no_default)",
		"signatureName": "shift",
		"returnsDescription": "Copy of input object, shifted.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L5282-L5320",
		"defaultConfig": {
			"periods": "1",
			"freq": "None",
			"axis": "0",
			"fill_value": "NoDefault.no_default"
		},
		"returns": "DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "to_period",
		"operationFullName": "pandas.DataFrame.to_period",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Time Series-related",
		"title": "pandas.DataFrame.to_period",
		"description": "Convert DataFrame from DatetimeIndex to PeriodIndex.",
		"signature": "DataFrame.to_period(freq=None, axis=0, copy=True)",
		"signatureName": "to_period",
		"returnsDescription": "",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L10404-L10436",
		"defaultConfig": {
			"freq": "None",
			"axis": "0",
			"copy": "True"
		},
		"returns": "DataFrame with PeriodIndex"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "to_timestamp",
		"operationFullName": "pandas.DataFrame.to_timestamp",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Time Series-related",
		"title": "pandas.DataFrame.to_timestamp",
		"description": "Cast to DatetimeIndex of timestamps, at beginning of period.",
		"signature": "DataFrame.to_timestamp(freq=None, how='start', axis=0, copy=True)",
		"signatureName": "to_timestamp",
		"returnsDescription": "",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/frame.py#L10366-L10402",
		"defaultConfig": {
			"freq": "None",
			"how": "start",
			"axis": "0",
			"copy": "True"
		},
		"returns": "DataFrame with DatetimeIndex"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "tshift",
		"operationFullName": "pandas.DataFrame.tshift",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Time Series-related",
		"title": "pandas.DataFrame.tshift",
		"description": "Shift the time index, using the index창\u0080\u0099s frequency if available.",
		"signature": "DataFrame.tshift(periods=1, freq=None, axis=0)",
		"signatureName": "tshift",
		"returnsDescription": "",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L9273-L9315",
		"defaultConfig": {
			"periods": "1",
			"freq": "None",
			"axis": "0"
		},
		"returns": "shiftedSeries/DataFrame"
	},
	{
		"operationId": "0759dede-2cee-433c-b314-10a8fa456e62",
		"operationName": "tz_localize",
		"operationFullName": "pandas.DataFrame.tz_localize",
		"inputTypes": [
			2
		],
		"outputType": 2,
		"framework": "pandas",
		"frameworkVersion": "1.4.3",
		"sectionTitle": "Time Series-related",
		"title": "pandas.DataFrame.tz_localize",
		"description": "Localize tz-naive index of a Series or DataFrame to target time zone.",
		"signature": "DataFrame.tz_localize(tz, axis=0, level=None, copy=True, ambiguous='raise', nonexistent='raise')",
		"signatureName": "tz_localize",
		"returnsDescription": "Same type as the input.",
		"sourceUrl": "https://github.com/pandas-dev/pandas/blob/v1.4.3/pandas/core/generic.py#L9531-L9698",
		"defaultConfig": {
			"tz": "",
			"axis": "0",
			"level": "None",
			"copy": "True",
			"ambiguous": "raise",
			"nonexistent": "raise"
		},
		"returns": "Series or DataFrame"
	}
]
