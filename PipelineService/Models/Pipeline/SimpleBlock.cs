using System;
using System.Security.Cryptography;
using System.Text;
using System.Text.Json;

namespace PipelineService.Models.Pipeline
{
    /// <summary>
    /// A <code>SimpleBlock</code> has one input dataset and one output dataset.
    /// The output dataset is generated by executing the operation on the input dataset.
    /// </summary>
    public class SimpleBlock : Block
    {
        /// <summary>
        /// The id of the input dataset.
        /// </summary>
        public Guid? InputDatasetId { get; set; }

        /// <summary>
        /// The producing hash of the input dataset. 
        /// </summary>
        public string InputDatasetHash { get; set; }

        public override string ComputeProducingHash()
        {
            var sb = new StringBuilder();

            using var hash = SHA256.Create();

            var enc = Encoding.UTF8;
            var input =
                $"{JsonSerializer.Serialize(InputDatasetId)}{JsonSerializer.Serialize(Operation)}{JsonSerializer.Serialize(OperationConfiguration)}";
            var result = hash.ComputeHash(enc.GetBytes(input));

            foreach (var b in result)
            {
                sb.Append(b.ToString("x2"));
            }

            return sb.ToString();
        }
    }
}