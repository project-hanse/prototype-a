// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PipelineService.Models;

#nullable disable

namespace PipelineService.Migrations
{
    [DbContext(typeof(EfDatabaseContext))]
    [Migration("20220920124138_StoreReEnqueueCount")]
    partial class StoreReEnqueueCount
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PipelineService.Models.Metrics.CandidateProcessingMetric", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Aborted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ActionCount")
                        .HasColumnType("int");

                    b.Property<int>("BatchNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CandidateCreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ChangedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("longtext");

                    b.Property<int>("ExecutionAttempts")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ImportEndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ImportStartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("ImportSuccess")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("OperationCount")
                        .HasColumnType("int");

                    b.Property<string>("OperationsRandomizedCount")
                        .HasColumnType("longtext");

                    b.Property<Guid>("PipelineId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("ProcessingCompleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<double?>("ProcessingDurationP")
                        .HasColumnType("double");

                    b.Property<DateTime?>("ProcessingEndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ProcessingStartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RewardFunctionType")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("SimulationEndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("SimulationStartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Success")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("TaskId")
                        .HasMaxLength(255)
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("CandidateProcessingMetrics");
                });

            modelBuilder.Entity("PipelineService.Models.Pipeline.Execution.OperationExecutionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Cached")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("ChangedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ExecutionCompletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<DateTime>("MovedToStatusInExecutionAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("OperationHash")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("OperationId")
                        .HasColumnType("char(36)");

                    b.Property<string>("OperationIdentifier")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("PipelineExecutionRecordId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PipelineId")
                        .HasColumnType("char(36)");

                    b.Property<string>("PredecessorsHash")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PipelineExecutionRecordId");

                    b.ToTable("OperationExecutionRecords");
                });

            modelBuilder.Entity("PipelineService.Models.Pipeline.Execution.PipelineExecutionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("AllowCachingResults")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("ChangedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("CompletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CompletionStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("PipelineId")
                        .HasColumnType("char(36)");

                    b.Property<int>("ReEnqueueCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Strategy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PipelineExecutionRecords");
                });

            modelBuilder.Entity("PipelineService.Models.Pipeline.Execution.OperationExecutionRecord", b =>
                {
                    b.HasOne("PipelineService.Models.Pipeline.Execution.PipelineExecutionRecord", "PipelineExecutionRecord")
                        .WithMany("OperationExecutionRecords")
                        .HasForeignKey("PipelineExecutionRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PipelineExecutionRecord");
                });

            modelBuilder.Entity("PipelineService.Models.Pipeline.Execution.PipelineExecutionRecord", b =>
                {
                    b.Navigation("OperationExecutionRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
