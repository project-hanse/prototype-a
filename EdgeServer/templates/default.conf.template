server {
    listen 80;
    server_name ${NGINX_HOST};
    location / {
        return 301 https://$host$request_uri;
    }

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}

server {
    listen                  443 ssl;
    server_name             ${NGINX_HOST};
    auth_basic              "Project Hanse";
    auth_basic_user_file    /etc/apache2/.htpasswd;
    ssl_certificate					/etc/letsencrypt/live/${NGINX_HOST}/fullchain.pem;
    ssl_certificate_key 		/etc/letsencrypt/live/${NGINX_HOST}/privkey.pem;
    include 								/etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam 						/etc/letsencrypt/ssl-dhparams.pem;

    location /mqtt {
        proxy_pass      							http://edge-message-broker:9001;
        proxy_http_version 						1.1;
        proxy_set_header Upgrade 			$http_upgrade;
        proxy_set_header Connection 	"Upgrade";
        proxy_set_header Host 				$host;
        auth_basic 										off; # TODO this should be on
    }

    location / {
        proxy_pass      http://dev-frontend:80;
    }

    location /api/pipeline {
        proxy_pass          http://pipeline-service:80;
        rewrite             /api/pipeline/(.*) /$1 break;
        proxy_redirect      off;
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP          	$remote_addr;
        proxy_set_header    X-Forwarded-Proto  	$scheme;
        proxy_set_header    X-Forwarded-For    	$proxy_add_x_forwarded_for;
    }

    location /api/file {
        proxy_pass          http://file-service:80;
        rewrite             /api/file/(.*) /$1 break; # TODO: temporary fix change back to /api/file/
        proxy_redirect      off;
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP          $remote_addr;
        proxy_set_header    X-Forwarded-Proto  $scheme;
        proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
    }

    location /api/dataset {
        proxy_pass          http://dataset-service:5002;
        rewrite             /api/dataset/(.*) /$1 break;
        proxy_redirect      off;
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP          $remote_addr;
        proxy_set_header    X-Forwarded-Proto  $scheme;
        proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
    }

    location /api/learning {
    		proxy_pass          http://learning-service:5006;
				rewrite             /api/learning/(.*) /$1 break;
				proxy_redirect      off;
				proxy_set_header    Host $host;
				proxy_set_header    X-Real-IP          $remote_addr;
				proxy_set_header    X-Forwarded-Proto  $scheme;
				proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
    }

    location /mlflow {
        proxy_pass 					http://mlflow-server:5005;
        rewrite             /mlflow/(.*) /$1 break;

        # Redefine the header fields that NGINX sends to the upstream server
        proxy_set_header 		Host $host;
        proxy_set_header 		X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-Proto  $scheme;
        proxy_set_header 		X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /adminer {
        proxy_pass 					http://adminer:8080;
        rewrite             /adminer/(.*) /$1 break;

        # Redefine the header fields that NGINX sends to the upstream server
        proxy_set_header 		Host $host;
        proxy_set_header 		X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-Proto  $scheme;
        proxy_set_header 		X-Forwarded-For $proxy_add_x_forwarded_for;
    }
#
#     location /db/pipeline {
#         proxy_pass          http://pipeline-database:7474;
#         rewrite             /db/pipeline/(.*) /$1 break;
#         proxy_redirect      off;
#         proxy_set_header    Host $host;
#         proxy_set_header    X-Real-IP          $remote_addr;
#         proxy_set_header    X-Forwarded-Proto  $scheme;
#         proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
#     }
}
