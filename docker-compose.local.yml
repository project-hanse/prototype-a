version: "3.8"
services:

  # Development Frontend
  dev-frontend:
    build:
      context: ./DevFrontend
      dockerfile: ./Dockerfile
      args:
        - "NG_CONFIG=local"
    ports:
      - "8080:80"
    depends_on:
      - pipeline-service

  # Pipeline Service
  pipeline-service:
    build:
      context: ./PipelineService
      dockerfile: ./Dockerfile
    environment:
      Logging__LogLevel__Default: Debug
      EVENT_BUS__MQTT_HOST: message-broker
      EVENT_BUS__MQTT_CLIENT_ID: pipeline-service-1
      EDGE_EVENT_BUS__MQTT_HOST: edge-message-broker
      EDGE_EVENT_BUS__MQTT_PORT: 1883
      EDGE_EVENT_BUS__MQTT_CLIENT_ID: pipeline-service-1
    ports:
      - "5000:80"

  # Learning Store
  learning-service:
    build:
      context: ./LearningService
      dockerfile: ./Dockerfile
    ports:
      - "5006:5006"
    expose:
      - 5006
    environment:
      - S3_HOST=localstack
      - S3_PORT=4566
    depends_on:
      - localstack
      - dataset-service
      - pipeline-service
      - mlflow-server

  # File Service
  file-service:
    build:
      context: ./FileService
      dockerfile: ./Dockerfile
    environment:
      Logging__LogLevel__Default: Information
      S3_HOST: localstack
      S3_PORT: 4566
    ports:
      - "5004:80"
    depends_on:
      - localstack

  # Operation Worker
  operation-worker:
    build:
      context: ./OperationWorker
      dockerfile: ./Dockerfile
    environment:
      - MQTT_HOST=message-broker
      - DATASET_HOST=dataset-service
      - DATASET_PORT=5002
    depends_on:
      - message-broker
      - localstack
    deploy:
      mode: replicated
      replicas: 1

  # Dataset Store
  dataset-service:
    build:
      context: ./DataSetService
      dockerfile: ./Dockerfile
    ports:
      - "5002:5002"
    expose:
      - 5002
    environment:
      - S3_HOST=localstack
      - S3_PORT=4566
    depends_on:
      - localstack

  # Message Broker
  message-broker:
    image: eclipse-mosquitto
    networks:
      - default
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./volumes/event-bus/mosquitto/config:/mosquitto/config

  # Edge Message Broker
  edge-message-broker:
    image: eclipse-mosquitto
    networks:
      - default
    ports:
      - "1884:1883"
      - "9002:9001"
    volumes:
      - ./volumes/edge-event-bus/mosquitto/config:/mosquitto/config

  # MLFlow Server
  mlflow-server:
    restart: unless-stopped
    build: ./MLflowServer
    depends_on:
      - localstack
      - mysql
    ports:
      - "5005:5000"
    networks:
      - default
    environment:
      AWS_REGION: eu-west-3
      AWS_DEFAULT_REGION: eu-west-3
      AWS_ACCESS_KEY_ID: localstack
      AWS_SECRET_ACCESS_KEY: localstack
      MLFLOW_S3_ENDPOINT_URL: http://localstack:4566
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: mlflowdb
      MYSQL_USER: mlflowuser
      MYSQL_PASSWORD: mlflowpassword

  # Localstack
  localstack:
    image: localstack/localstack:0.14.1
    environment:
      SERVICES: s3
      EAGER_SERVICE_LOADING: 1
      DEFAULT_REGION: eu-west-3
      AWS_REGION: eu-west-3
      DATA_DIR: /tmp/localstack/data
      DOCKER_HOST: unix:///var/run/docker.sock
      EXTRA_CORS_ALLOWED_ORIGINS: http://localhost:4200,http://localhost:8080
    ports:
      - "4566:4566"
      - "4571:4571"
    volumes:
      - ./volumes/localstack/data:/tmp/localstack

  # Neo4j Pipeline Database
  pipeline-database:
    build:
      context: ./Neo4jPlugins
      dockerfile: ./Dockerfile
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=neo4j/test
    ports:
      - "7474:7474" # HTTP
      - "7473:7473" # HTTPS
      - "7687:7687" # Bolt
    volumes:
      - ./volumes/neo4j/data:/data
      - ./volumes/neo4j/logs:/logs

  # MySQL Database
  mysql:
    image: mysql:5.7
    restart: unless-stopped
    networks:
      - default
    environment:
      - MYSQL_DATABASE=mlflowdb
      - MYSQL_USER=mlflowuser
      - MYSQL_PASSWORD=mlflowpassword
      - MYSQL_ROOT_PASSWORD=aNIdBLTOIC4XuHgk66
    volumes:
      - ./volumes/mysql:/var/lib/mysql
