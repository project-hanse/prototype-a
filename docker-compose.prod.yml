version: '3.3'

services:
  # NGINX Reverse Proxy
  edge-nginx:
    image: ghcr.io/project-hanse/prototype-a/hanse-edge-server:main
    restart: unless-stopped
    networks:
      - default
    volumes:
      - ./volumes/edge-server/logs:/var/log/nginx
      - ./volumes/edge-server/etc/apache2:/etc/apache2
      - ./volumes/edge-server/certbot/conf:/etc/letsencrypt
      - ./volumes/edge-server/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_HOST=hanse.allteams.at
    depends_on:
      - dev-frontend
      - pipeline-service
      - pipeline-database
      - dataset-service
      - edge-message-broker

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./volumes/edge-server/certbot/conf:/etc/letsencrypt
      - ./volumes/edge-server/certbot/www:/var/www/certbot

  # Edge Message Broker
  edge-message-broker:
    image: eclipse-mosquitto
    restart: unless-stopped
    networks:
      - default
    volumes:
      - ./volumes/edge-event-bus/mosquitto/config:/mosquitto/config

  # Development Frontend
  dev-frontend:
    image: ghcr.io/project-hanse/prototype-a/dev-frontend:main
    restart: unless-stopped
    networks:
      - default
    depends_on:
      - pipeline-service

  # Pipeline Service
  pipeline-service:
    image: ghcr.io/project-hanse/prototype-a/pipeline-service:main
    restart: unless-stopped
    environment:
      Logging__LogLevel__Default: Information
      EVENT_BUS__MQTT_HOST: message-broker
      EVENT_BUS__MQTT_CLIENT_ID: pipeline-service-1
      EDGE_EVENT_BUS__MQTT_HOST: edge-message-broker
      EDGE_EVENT_BUS__MQTT_PORT: 1883
      EDGE_EVENT_BUS__MQTT_CLIENT_ID: pipeline-service-1
    depends_on:
      - message-broker
      - pipeline-database

  # Learning Store
  learning-service:
    image: ghcr.io/project-hanse/prototype-a/learning-service:main
    restart: unless-stopped
    ports:
      - "5006:5006"
    environment:
      S3_HOST: localstack
      S3_PORT: 4566
      PIPELINE_SERVICE_HOST: pipeline-service
      PIPELINE_SERVICE_PORT: 80
      DATASET_SERVICE_HOST: dataset-service
      DATASET_SERVICE_PORT: 5002
      MLFLOW_TRACKING_URI: "http://mlflow-server:5005"
      MLFLOW_REGISTRY_URI: "http://mlflow-server:5005"
    depends_on:
      - localstack
      - dataset-service
      - pipeline-service
      - mlflow-server

  # File Service
  file-service:
    image: ghcr.io/project-hanse/prototype-a/file-service:main
    restart: unless-stopped
    environment:
      Logging__LogLevel__Default: Information
      S3_HOST: localstack
      S3_PORT: 4566
    depends_on:
      - localstack

  # Dataset Store
  dataset-service:
    image: ghcr.io/project-hanse/prototype-a/dataset-service:main
    restart: unless-stopped
    networks:
      - default
    environment:
      - S3_HOST=localstack
      - S3_PORT=4566
    depends_on:
      - localstack

  # Operation Worker
  operation-worker:
    image: ghcr.io/project-hanse/prototype-a/operation-worker:main
    restart: unless-stopped
    networks:
      - default
    environment:
      - MQTT_HOST=message-broker
      - DATASET_HOST=dataset-service
      - DATASET_PORT=5002
    depends_on:
      - message-broker
      - localstack
    deploy:
      mode: replicated
      replicas: 1

  # MLFlow Server
  mlflow-server:
    image: ghcr.io/project-hanse/prototype-a/hanse-mlflow-server:main
    restart: unless-stopped
    depends_on:
      - localstack
      - mysql
    ports:
      - "5005:5005"
    networks:
      - default
    environment:
      AWS_REGION: eu-west-3
      AWS_DEFAULT_REGION: eu-west-3
      AWS_ACCESS_KEY_ID: localstack
      AWS_SECRET_ACCESS_KEY: localstack
      MLFLOW_S3_ENDPOINT_URL: http://localstack:4566
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: mlflowdb
      MYSQL_USER: mlflowuser
      MYSQL_PASSWORD: O0vP2RrMraDz

  # Neo4j Pipeline Database
  pipeline-database:
    image: ghcr.io/project-hanse/prototype-a/hanse-neo4j:main
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=neo4j/test
    volumes:
      - ./volumes/neo4j/data:/data
      - ./volumes/neo4j/logs:/logs

  # Message Broker
  message-broker:
    image: eclipse-mosquitto
    restart: unless-stopped
    networks:
      - default
    volumes:
      - ./volumes/event-bus/mosquitto/config:/mosquitto/config

  # S3 Bucket
  localstack:
    image: localstack/localstack:0.14.3
    restart: unless-stopped
    environment:
      - SERVICES=s3
      - EAGER_SERVICE_LOADING=1
      - DEFAULT_REGION=eu-west-2
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - ./volumes/localstack/data:/tmp/localstack/data

  # MySQL Database
  mysql:
    image: mysql:5.7
    restart: unless-stopped
    networks:
      - default
    environment:
      MYSQL_DATABASE: mlflowdb
      MYSQL_USER: mlflowuser
      MYSQL_PASSWORD: O0vP2RrMraDz
      MYSQL_ROOT_PASSWORD: aNIdBLTOIC4XuHgk66
    volumes:
      - ./volumes/mysql:/var/lib/mysql

